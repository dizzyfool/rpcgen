{
	"openrpc": "1.2.6",
	"info": {
		"title": "test",
		"description": "",
		"version": "v0.0.0-7e47e3b8cfdca471b71cc230ade5caee"
	},
	"servers": [
		{
			"url": "http://localhost/",
			"name": "localhost"
		}
	],
	"methods": [
		{
			"name": "analytics.AddToCart",
			"summary": "Add products to cart.",
			"tags": [
				{
					"name": "analytics"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "clientId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "ua",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "host",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "products",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "params",
					"summary": "ApiAnalyticsParams",
					"schema": {
						"$ref": "#/components/schemas/ApiAnalyticsParams"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "analytics.Checkout",
			"summary": "Checkout step.",
			"tags": [
				{
					"name": "analytics"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "clientId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "ua",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "host",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "products",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "step",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "orderType",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "params",
					"summary": "ApiAnalyticsParams",
					"schema": {
						"$ref": "#/components/schemas/ApiAnalyticsParams"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "analytics.NewCart",
			"summary": "New Cart.",
			"tags": [
				{
					"name": "analytics"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "clientId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "ua",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "host",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "params",
					"summary": "ApiAnalyticsParams",
					"schema": {
						"$ref": "#/components/schemas/ApiAnalyticsParams"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "analytics.Order",
			"summary": "Order.",
			"tags": [
				{
					"name": "analytics"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "clientId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "ua",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "host",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "orderType",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "params",
					"summary": "ApiAnalyticsParams",
					"schema": {
						"$ref": "#/components/schemas/ApiAnalyticsParams"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "analytics.ProductView",
			"summary": "Product View.",
			"tags": [
				{
					"name": "analytics"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "clientId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "ua",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "host",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "params",
					"summary": "ApiAnalyticsParams",
					"schema": {
						"$ref": "#/components/schemas/ApiAnalyticsParams"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "analytics.RemoveFromCart",
			"summary": "Remove products from cart.",
			"tags": [
				{
					"name": "analytics"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "clientId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "ua",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "host",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "products",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "params",
					"summary": "ApiAnalyticsParams",
					"schema": {
						"$ref": "#/components/schemas/ApiAnalyticsParams"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "app.CheckCaptcha",
			"summary": "Check captcha token",
			"tags": [
				{
					"name": "app"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "token",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "app.LastModified",
			"summary": "LastModified returns last modification times of cart and orders for user.",
			"tags": [
				{
					"name": "app"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "AppLastModifiedResponse",
				"summary": "ApiLastStatus",
				"schema": {
					"$ref": "#/components/schemas/ApiLastStatus"
				}
			}
		},
		{
			"name": "app.Settings",
			"summary": "Settings.",
			"tags": [
				{
					"name": "app"
				}
			],
			"params": [],
			"result": {
				"name": "AppSettingsResponse",
				"summary": "ApiAppSettings",
				"schema": {
					"$ref": "#/components/schemas/ApiAppSettings"
				}
			}
		},
		{
			"name": "article.AddComment",
			"summary": "AddComment add article comment.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiArticleCommentForm",
					"schema": {
						"$ref": "#/components/schemas/ApiArticleCommentForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "ArticleAddCommentResponse",
				"summary": "ApiArticleComment",
				"schema": {
					"$ref": "#/components/schemas/ApiArticleComment"
				}
			},
			"errors": [
				{
					"code": 411,
					"message": "comment is not top level"
				},
				{
					"code": 404,
					"message": "article was not found"
				},
				{
					"code": 410,
					"message": "comment was not found"
				}
			]
		},
		{
			"name": "article.AuthorByAlias",
			"summary": "AuthorByAlias returns articles author by alias.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "alias",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ArticleAuthorByAliasResponse",
				"summary": "ApiArticleAuthor",
				"schema": {
					"$ref": "#/components/schemas/ApiArticleAuthor"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "author not found"
				}
			]
		},
		{
			"name": "article.AuthorForInstruction",
			"summary": "AuthorForInstruction returns author for instruction.",
			"tags": [
				{
					"name": "article"
				}
			],
			"params": [],
			"result": {
				"name": "ArticleAuthorForInstructionResponse",
				"summary": "ApiArticleAuthorSummary",
				"schema": {
					"$ref": "#/components/schemas/ApiArticleAuthorSummary"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "author not found"
				}
			]
		},
		{
			"name": "article.Comments",
			"summary": "Get Comments.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiArticleCommentSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiArticleCommentSearch"
					}
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ArticleCommentsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiArticleComment"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "article.CommentsCount",
			"summary": "Get Comments count.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiArticleCommentSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiArticleCommentSearch"
					}
				}
			],
			"result": {
				"name": "ArticleCommentsCountResponse",
				"summary": "ApiArticleCommentsCount",
				"schema": {
					"$ref": "#/components/schemas/ApiArticleCommentsCount"
				}
			}
		},
		{
			"name": "article.ComplaintComment",
			"summary": "Complaint Comment.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "complaint",
					"summary": "ApiArticleCommentComplaint",
					"schema": {
						"$ref": "#/components/schemas/ApiArticleCommentComplaint"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/NullResponse"
			},
			"errors": [
				{
					"code": 403,
					"message": "too many complaints per 24 hours"
				},
				{
					"code": 410,
					"message": "comment not found"
				}
			]
		},
		{
			"name": "article.Count",
			"summary": "Get Articles count.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiArticleSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiArticleSearch"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "article.DislikeComment",
			"summary": "Dislike Comment.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ArticleDislikeCommentResponse",
				"summary": "ApiArticleComment",
				"schema": {
					"$ref": "#/components/schemas/ApiArticleComment"
				}
			},
			"errors": [
				{
					"code": 410,
					"message": "comment not found"
				}
			]
		},
		{
			"name": "article.Get",
			"summary": "Get Articles.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiArticleSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiArticleSearch"
					}
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ArticleGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiArticle"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "article.GetByAlias",
			"summary": "Get Article By Alias.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "alias",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "ArticleGetByAliasResponse",
				"summary": "ApiArticle",
				"schema": {
					"$ref": "#/components/schemas/ApiArticle"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "article/city was not found"
				}
			]
		},
		{
			"name": "article.GetByProduct",
			"summary": "Get Articles By Product.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "productId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ArticleGetByProductResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiArticle"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "product was not found"
				}
			]
		},
		{
			"name": "article.LikeComment",
			"summary": "Like Comment.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ArticleLikeCommentResponse",
				"summary": "ApiArticleComment",
				"schema": {
					"$ref": "#/components/schemas/ApiArticleComment"
				}
			},
			"errors": [
				{
					"code": 410,
					"message": "comment not found"
				}
			]
		},
		{
			"name": "article.Rate",
			"summary": "Rate article.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "articleId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "rating",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/NullResponse"
			},
			"errors": [
				{
					"code": 404,
					"message": "article not found"
				},
				{
					"code": 413,
					"message": "invalid rating value"
				}
			]
		},
		{
			"name": "article.Rubrics",
			"summary": "Get Rubrics.",
			"tags": [
				{
					"name": "article"
				}
			],
			"params": [],
			"result": {
				"name": "ArticleRubricsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiArticleRubric"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "article.Tags",
			"summary": "Get Tags.",
			"tags": [
				{
					"name": "article"
				}
			],
			"params": [],
			"result": {
				"name": "ArticleTagsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiArticleTag"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "article.ValidateComment",
			"summary": "Validate Comment.",
			"tags": [
				{
					"name": "article"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiArticleCommentForm",
					"schema": {
						"$ref": "#/components/schemas/ApiArticleCommentForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "ArticleValidateCommentResponse",
				"summary": "[]FieldError",
				"schema": {
					"description": "[]FieldError",
					"items": [
						{
							"$ref": "#/components/schemas/FieldError"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "auth.ChangePassword",
			"summary": "Change Password.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "old",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "new",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 501,
					"message": "old password is invalid"
				},
				{
					"code": 502,
					"message": "new password is invalid"
				},
				{
					"code": 503,
					"message": "failed to change password"
				}
			]
		},
		{
			"name": "auth.GetCode",
			"summary": "Get Code / Create User.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "phone",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "mustExist",
					"schema": {
						"type": [
							"boolean"
						]
					}
				},
				{
					"name": "sendRealSms",
					"schema": {
						"type": [
							"boolean"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 404,
					"message": "phone was not found"
				},
				{
					"code": 501,
					"message": "no phone or apiKey provided"
				},
				{
					"code": 502,
					"message": "given phone is different from user's"
				},
				{
					"code": 503,
					"message": "failed to create new user"
				},
				{
					"code": 504,
					"message": "failed to send sms"
				},
				{
					"code": 505,
					"message": "given phone number is invalid"
				},
				{
					"code": 506,
					"message": "given phone number is blocked"
				}
			]
		},
		{
			"name": "auth.GetCodeByCall",
			"summary": "Get Code by phone call / Create User.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "phone",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "mustExist",
					"schema": {
						"type": [
							"boolean"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 501,
					"message": "no phone or apiKey provided"
				},
				{
					"code": 502,
					"message": "given phone is different from user's"
				},
				{
					"code": 503,
					"message": "failed to create new user"
				},
				{
					"code": 505,
					"message": "given phone number is invalid"
				},
				{
					"code": 506,
					"message": "given phone number is blocked"
				},
				{
					"code": 507,
					"message": "failed to call"
				},
				{
					"code": 404,
					"message": "phone was not found"
				}
			]
		},
		{
			"name": "auth.Login",
			"summary": "Login User By Code.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "code",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "phone",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "password",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			},
			"errors": [
				{
					"code": 501,
					"message": "given phone number is invalid"
				},
				{
					"code": 504,
					"message": "failed to create new user"
				},
				{
					"code": 505,
					"message": "failed to verify code"
				},
				{
					"code": 506,
					"message": "password is invalid"
				}
			]
		},
		{
			"name": "auth.LoginByJWT",
			"summary": "Login User By JWT.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "jwtToken",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid jwt token"
				}
			]
		},
		{
			"name": "auth.LoginByYandexAccessToken",
			"summary": "Login User By Yandex Access Token.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "token",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "phone",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "code",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "AuthLoginByYandexAccessTokenResponse",
				"summary": "ApiLoginByJWTResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiLoginByJWTResponse"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid jwt token"
				},
				{
					"code": 501,
					"message": "empty phone in jwt token"
				},
				{
					"code": 502,
					"message": "given phone number is invalid"
				},
				{
					"code": 504,
					"message": "failed to create new user"
				}
			]
		},
		{
			"name": "auth.LoginByYandexJWT",
			"summary": "Login User By Yandex JWT.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "jwtToken",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "phone",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "code",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "AuthLoginByYandexJWTResponse",
				"summary": "ApiLoginByJWTResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiLoginByJWTResponse"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid jwt token"
				},
				{
					"code": 501,
					"message": "empty phone in jwt token"
				},
				{
					"code": 502,
					"message": "given phone number is invalid"
				},
				{
					"code": 504,
					"message": "failed to create new user"
				}
			]
		},
		{
			"name": "auth.Register",
			"summary": "Register User By Code.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "code",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "phone",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "name",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "email",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "sendInfoSms",
					"schema": {
						"type": [
							"boolean"
						]
					}
				},
				{
					"name": "profile",
					"summary": "ApiProfileRegister",
					"schema": {
						"$ref": "#/components/schemas/ApiProfileRegister"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			},
			"errors": [
				{
					"code": 501,
					"message": "given phone number is invalid"
				},
				{
					"code": 502,
					"message": "given name is invalid"
				},
				{
					"code": 503,
					"message": "given email is invalid"
				},
				{
					"code": 504,
					"message": "failed to create new user"
				},
				{
					"code": 505,
					"message": "failed to verify code"
				},
				{
					"code": 506,
					"message": "failed to update user"
				},
				{
					"code": 507,
					"message": "failed to send sms"
				}
			]
		},
		{
			"name": "auth.RemindPassword",
			"summary": "Remind Password.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "phone",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "code",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 503,
					"message": "failed to change password"
				},
				{
					"code": 504,
					"message": "failed to send sms"
				},
				{
					"code": 505,
					"message": "failed to verify code"
				},
				{
					"code": 400,
					"message": "no phone or code provided"
				},
				{
					"code": 404,
					"message": "phone was not found"
				}
			]
		},
		{
			"name": "auth.ValidateRegister",
			"summary": "ValidateRegister.",
			"tags": [
				{
					"name": "auth"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "phone",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "name",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "email",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "AuthValidateRegisterResponse",
				"summary": "ApiAuthValidateRegister",
				"schema": {
					"$ref": "#/components/schemas/ApiAuthValidateRegister"
				}
			}
		},
		{
			"name": "cart.Add",
			"summary": "Add.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "product",
					"summary": "ApiCartRequestItem",
					"schema": {
						"$ref": "#/components/schemas/ApiCartRequestItem"
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "CartAddResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			}
		},
		{
			"name": "cart.AddBulk",
			"summary": "Add Bulk.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "products",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "CartAddBulkResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			}
		},
		{
			"name": "cart.Analogs",
			"summary": "Analogs Get analogs for products in cart.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "pharmacyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyNetworkId",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CartAnalogsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCartAnalogItem"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "pharmacy was not found"
				}
			]
		},
		{
			"name": "cart.Destroy",
			"summary": "Destroy.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "CartDestroyResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			}
		},
		{
			"name": "cart.Get",
			"summary": "Get.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "CartGetResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			}
		},
		{
			"name": "cart.Refresh",
			"summary": "Refresh.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "CartRefreshResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			}
		},
		{
			"name": "cart.Remove",
			"summary": "Remove.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "product",
					"summary": "ApiCartRequestItem",
					"schema": {
						"$ref": "#/components/schemas/ApiCartRequestItem"
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "CartRemoveResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			}
		},
		{
			"name": "cart.Replace",
			"summary": "Replace one product with another.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "targetProductId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "product",
					"summary": "ApiCartRequestItem",
					"schema": {
						"$ref": "#/components/schemas/ApiCartRequestItem"
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "CartReplaceResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			}
		},
		{
			"name": "cart.SetContext",
			"summary": "SetContext",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "cartContext",
					"summary": "ApiCartContext",
					"schema": {
						"$ref": "#/components/schemas/ApiCartContext"
					},
					"required": true
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "CartSetContextResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			},
			"errors": [
				{
					"code": 500,
					"message": "internal error"
				},
				{
					"code": 402,
					"message": "invalid cart id"
				},
				{
					"code": 404,
					"message": "city not found"
				},
				{
					"code": 412,
					"message": "pharmacies limit exceeded"
				},
				{
					"code": 413,
					"message": "geo object not found"
				}
			]
		},
		{
			"name": "cart.SetShared",
			"summary": "Share.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "url",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "CartSetSharedResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "malformed cart url"
				}
			]
		},
		{
			"name": "cart.Share",
			"summary": "Share.",
			"tags": [
				{
					"name": "cart"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CartShareResponse",
				"summary": "ApiCartShare",
				"schema": {
					"$ref": "#/components/schemas/ApiCartShare"
				}
			},
			"errors": [
				{
					"code": 405,
					"message": "empty cart"
				}
			]
		},
		{
			"name": "cashback.About",
			"summary": "Content for \"about\".",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"params": [],
			"result": {
				"name": "CashbackAboutResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCashbackTooltip"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "cashback.Categories",
			"summary": "Categories.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CashbackCategoriesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCashbackCategory"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "city was not found"
				},
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "cashback.Count",
			"summary": "Count Campaigns.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiCashbackSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiCashbackSearch"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "cashback.CountReceipts",
			"summary": "CountReceipts count user receipts.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "cashback.CountTransactions",
			"summary": "Count Transactions.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "cashback.Counters",
			"summary": "Counters returns ApiCashbackCounters.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"params": [],
			"result": {
				"name": "CashbackCountersResponse",
				"summary": "ApiCashbackCounters",
				"schema": {
					"$ref": "#/components/schemas/ApiCashbackCounters"
				}
			}
		},
		{
			"name": "cashback.Get",
			"summary": "Get Campaigns.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiCashbackSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiCashbackSearch"
					},
					"required": true
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CashbackGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCashbackCampaignSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "cashback.GetById",
			"summary": "Get Campaign By Id.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "campaignId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CashbackGetByIdResponse",
				"summary": "ApiCashbackCampaign",
				"schema": {
					"$ref": "#/components/schemas/ApiCashbackCampaign"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "Campaign was not found"
				}
			]
		},
		{
			"name": "cashback.GetReceipts",
			"summary": "GetReceipts returns user receipts.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CashbackGetReceiptsResponse",
				"summary": "[]ApiCashbackReceipt",
				"schema": {
					"description": "[]ApiCashbackReceipt",
					"items": [
						{
							"$ref": "#/components/schemas/ApiCashbackReceipt"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "cashback.GetTransactions",
			"summary": "Get Transactions.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"params": [],
			"result": {
				"name": "CashbackGetTransactionsResponse",
				"summary": "[]ApiCashbackTransaction",
				"schema": {
					"description": "[]ApiCashbackTransaction",
					"items": [
						{
							"$ref": "#/components/schemas/ApiCashbackTransaction"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "cashback.Payout",
			"summary": "Invoke Payout.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiCashbackPayoutForm",
					"schema": {
						"$ref": "#/components/schemas/ApiCashbackPayoutForm"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "cashback.ReceiptById",
			"summary": "ReceiptById returns receipt by id.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "receiptId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CashbackReceiptByIdResponse",
				"summary": "ApiFullCashbackReceipt",
				"schema": {
					"$ref": "#/components/schemas/ApiFullCashbackReceipt"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "not found"
				}
			]
		},
		{
			"name": "cashback.ResetCounters",
			"summary": "ResetCounters reset all cashback counters to zero.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/NullResponse"
			}
		},
		{
			"name": "cashback.Rules",
			"summary": "Rules return rules of cashback.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			}
		},
		{
			"name": "cashback.SaveReceipt",
			"summary": "SaveReceipt.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "qrData",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "formData",
					"summary": "ApiCashbackReceiptForm",
					"schema": {
						"$ref": "#/components/schemas/ApiCashbackReceiptForm"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 409,
					"message": "already exists"
				}
			]
		},
		{
			"name": "cashback.Tooltips",
			"summary": "Content for tooltips.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"params": [],
			"result": {
				"name": "CashbackTooltipsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCashbackTooltip"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "cashback.ValidatePayout",
			"summary": "ValidatePayout.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiCashbackPayoutForm",
					"schema": {
						"$ref": "#/components/schemas/ApiCashbackPayoutForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "CashbackValidatePayoutResponse",
				"summary": "[]FieldError",
				"schema": {
					"description": "[]FieldError",
					"items": [
						{
							"$ref": "#/components/schemas/FieldError"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "cashback.ValidateReceipt",
			"summary": "ValidateReceipt.",
			"tags": [
				{
					"name": "cashback"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "qrData",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "formData",
					"summary": "ApiCashbackReceiptForm",
					"schema": {
						"$ref": "#/components/schemas/ApiCashbackReceiptForm"
					}
				}
			],
			"result": {
				"name": "CashbackValidateReceiptResponse",
				"summary": "[]FieldError",
				"schema": {
					"description": "[]FieldError",
					"items": [
						{
							"$ref": "#/components/schemas/FieldError"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 409,
					"message": "already exists"
				}
			]
		},
		{
			"name": "catalogue.AlphabeticalIndex",
			"summary": "Get Alphabetical Index.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "property",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "categoryId",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueAlphabeticalIndexResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiValue"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.AlphabeticalList",
			"summary": "Get Alphabetical List.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "property",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "categoryId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "group",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CatalogueAlphabeticalListResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiValue"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.AlphabeticalListGrouped",
			"summary": "Get Grouped Alphabetical List.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "property",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueAlphabeticalListGroupedResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiAlphabeticalGroup"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.Categories",
			"summary": "Categories list/tree.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "collapse",
					"schema": {
						"type": [
							"boolean"
						]
					}
				},
				{
					"name": "isPopular",
					"schema": {
						"type": [
							"boolean"
						]
					}
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				},
				{
					"name": "withEmpty",
					"schema": {
						"type": [
							"boolean"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueCategoriesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCategory"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.CategoryBranch",
			"summary": "Category Branch.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "categoryId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CatalogueCategoryBranchResponse",
				"summary": "ApiCategory",
				"schema": {
					"$ref": "#/components/schemas/ApiCategory"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.Cities",
			"summary": "Cities list.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"params": [],
			"result": {
				"name": "CatalogueCitiesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCity"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "catalogue.CitiesByQuery",
			"summary": "Get Cities By Query.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "query",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueCitiesByQueryResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCity"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "catalogue.CityByAlias",
			"summary": "City by alias.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "alias",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CatalogueCityByAliasResponse",
				"summary": "ApiCity",
				"schema": {
					"$ref": "#/components/schemas/ApiCity"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.CityById",
			"summary": "City by id.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CatalogueCityByIdResponse",
				"summary": "ApiCity",
				"schema": {
					"$ref": "#/components/schemas/ApiCity"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.CityByIp",
			"summary": "City by ip.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "ip",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueCityByIpResponse",
				"summary": "ApiCity",
				"schema": {
					"$ref": "#/components/schemas/ApiCity"
				}
			}
		},
		{
			"name": "catalogue.CityByLatLon",
			"summary": "City by latitude and longitude.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "latitude",
					"schema": {
						"type": [
							"number"
						]
					},
					"required": true
				},
				{
					"name": "longitude",
					"schema": {
						"type": [
							"number"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CatalogueCityByLatLonResponse",
				"summary": "ApiCity",
				"schema": {
					"$ref": "#/components/schemas/ApiCity"
				}
			}
		},
		{
			"name": "catalogue.Count",
			"summary": "Count Catalogue Items.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "catalogue.GeoObjectById",
			"summary": "GeoObject by id.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "geoObjectId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CatalogueGeoObjectByIdResponse",
				"summary": "ApiGeoObject",
				"schema": {
					"$ref": "#/components/schemas/ApiGeoObject"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "geo object was not found"
				}
			]
		},
		{
			"name": "catalogue.GeoObjects",
			"summary": "GeoObjects list.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueGeoObjectsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiGeoObject"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "catalogue.GeoObjectsByQuery",
			"summary": "Get GeoObjects by query",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "query",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueGeoObjectsByQueryResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiGeoObjectAutocompleteItem"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "catalogue.Get",
			"summary": "Get Catalogue Items.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiCatalogueItem"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "catalogue.MainPage",
			"summary": "Get MainPage (deprecated).",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueMainPageResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiMainPageGroup"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "catalogue.PharmacyNetworks",
			"summary": "PharmacyNetworks list (deprecated).",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CataloguePharmacyNetworksResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPharmacyNetwork"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.Stations",
			"summary": "Stations list.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "CatalogueStationsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiStation"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "catalogue.SuggestAddresses",
			"summary": "Suggest Addresses.",
			"tags": [
				{
					"name": "catalogue"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "query",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "CatalogueSuggestAddressesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiSuggestAddress"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "delivery.AddressHistory",
			"summary": "Delivery Address History.",
			"tags": [
				{
					"name": "delivery"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "DeliveryAddressHistoryResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiDeliveryAddress"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "delivery.Calculate",
			"summary": "Calculate Delivery Courier.",
			"tags": [
				{
					"name": "delivery"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "pharmacyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "address",
					"summary": "ApiDeliveryAddress",
					"schema": {
						"$ref": "#/components/schemas/ApiDeliveryAddress"
					},
					"required": true
				},
				{
					"name": "deliveryTypeId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "DeliveryCalculateResponse",
				"summary": "ApiDeliveryCart",
				"schema": {
					"$ref": "#/components/schemas/ApiDeliveryCart"
				}
			},
			"errors": [
				{
					"code": 402,
					"message": "invalid courier address"
				},
				{
					"code": 404,
					"message": "pharmacy was not found"
				},
				{
					"code": 405,
					"message": "no delivery prices for given provider, cart and pharmacy"
				}
			]
		},
		{
			"name": "delivery.CalculateCourier",
			"summary": "Calculate Delivery Courier.",
			"tags": [
				{
					"name": "delivery"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "pharmacyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "address",
					"summary": "ApiDeliveryAddress",
					"schema": {
						"$ref": "#/components/schemas/ApiDeliveryAddress"
					},
					"required": true
				},
				{
					"name": "courierTypeId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "DeliveryCalculateCourierResponse",
				"summary": "ApiDeliveryCourierCart",
				"schema": {
					"$ref": "#/components/schemas/ApiDeliveryCourierCart"
				}
			},
			"errors": [
				{
					"code": 402,
					"message": "invalid courier address"
				},
				{
					"code": 403,
					"message": "failed to get provider data"
				},
				{
					"code": 404,
					"message": "pharmacy was not found"
				},
				{
					"code": 405,
					"message": "no courier prices for given provider, cart and pharmacy"
				}
			]
		},
		{
			"name": "delivery.CourierList",
			"summary": "Delivery Courier List",
			"tags": [
				{
					"name": "delivery"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "address",
					"summary": "ApiDeliveryAddress",
					"schema": {
						"$ref": "#/components/schemas/ApiDeliveryAddress"
					},
					"required": true
				}
			],
			"result": {
				"name": "DeliveryCourierListResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiDeliveryCourier"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 403,
					"message": "failed to get provider data"
				},
				{
					"code": 404,
					"message": "city was not found"
				},
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 402,
					"message": "invalid courier address"
				}
			]
		},
		{
			"name": "delivery.List",
			"summary": "Delivery List",
			"tags": [
				{
					"name": "delivery"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "address",
					"summary": "ApiDeliveryAddress",
					"schema": {
						"$ref": "#/components/schemas/ApiDeliveryAddress"
					},
					"required": true
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "group",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "DeliveryListResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiDeliveryOption"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 402,
					"message": "invalid delivery address"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "delivery.SuggestAddresses",
			"summary": "Suggest Addresses.",
			"tags": [
				{
					"name": "delivery"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "query",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "DeliverySuggestAddressesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiSuggestAddressDelivery"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city was not found"
				}
			]
		},
		{
			"name": "discount.Counters",
			"summary": "Counters returns ApiDiscountCounters.",
			"tags": [
				{
					"name": "discount"
				}
			],
			"params": [],
			"result": {
				"name": "DiscountCountersResponse",
				"summary": "ApiDiscountCounters",
				"schema": {
					"$ref": "#/components/schemas/ApiDiscountCounters"
				}
			}
		},
		{
			"name": "discount.DeleteCard",
			"summary": "Delete Card.",
			"tags": [
				{
					"name": "discount"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 404,
					"message": "card not found"
				}
			]
		},
		{
			"name": "discount.GetCards",
			"summary": "GetCards.",
			"tags": [
				{
					"name": "discount"
				}
			],
			"params": [],
			"result": {
				"name": "DiscountGetCardsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiDiscountCard"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "discount.Partners",
			"summary": "Get Partners with discount available.",
			"tags": [
				{
					"name": "discount"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "DiscountPartnersResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPartnerSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "discount.SaveCard",
			"summary": "SaveCard.",
			"tags": [
				{
					"name": "discount"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "formData",
					"summary": "ApiDiscountCardForm",
					"schema": {
						"$ref": "#/components/schemas/ApiDiscountCardForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "DiscountSaveCardResponse",
				"schema": {
					"$ref": "#/components/schemas/DiscountSaveCardResponse"
				}
			},
			"errors": [
				{
					"code": 405,
					"message": "invalid card code"
				},
				{
					"code": 409,
					"message": "already exists"
				},
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "discount.Transactions",
			"summary": "Get Transactions.",
			"tags": [
				{
					"name": "discount"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "DiscountTransactionsResponse",
				"summary": "[]ApiDiscountTransaction",
				"schema": {
					"description": "[]ApiDiscountTransaction",
					"items": [
						{
							"$ref": "#/components/schemas/ApiDiscountTransaction"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "discount.ValidateCard",
			"summary": "ValidateCard.",
			"tags": [
				{
					"name": "discount"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "formData",
					"summary": "ApiDiscountCardForm",
					"schema": {
						"$ref": "#/components/schemas/ApiDiscountCardForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "DiscountValidateCardResponse",
				"summary": "[]FieldError",
				"schema": {
					"description": "[]FieldError",
					"items": [
						{
							"$ref": "#/components/schemas/FieldError"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 409,
					"message": "already exists"
				},
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 405,
					"message": "invalid card code"
				}
			]
		},
		{
			"name": "map.AreaByIp",
			"summary": "AreaByIp returns map area by ip.",
			"tags": [
				{
					"name": "map"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "ip",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "MapAreaByIpResponse",
				"summary": "ApiMapArea",
				"schema": {
					"$ref": "#/components/schemas/ApiMapArea"
				}
			}
		},
		{
			"name": "map.Cluster",
			"summary": "Cluster returns clustered pharmacies",
			"tags": [
				{
					"name": "map"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "data",
					"summary": "ApiMapSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiMapSearch"
					},
					"required": true
				},
				{
					"name": "view",
					"summary": "ApiMapView",
					"schema": {
						"$ref": "#/components/schemas/ApiMapView"
					},
					"required": true
				},
				{
					"name": "filters",
					"summary": "ApiMapFilters",
					"schema": {
						"$ref": "#/components/schemas/ApiMapFilters"
					}
				}
			],
			"result": {
				"name": "MapClusterResponse",
				"summary": "ApiMapClusterResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiMapClusterResponse"
				}
			}
		},
		{
			"name": "map.Pharmacies",
			"summary": "Pharmacies returns list of prices and pharmacies",
			"tags": [
				{
					"name": "map"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "data",
					"summary": "ApiMapSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiMapSearch"
					},
					"required": true
				},
				{
					"name": "view",
					"summary": "ApiMapView",
					"schema": {
						"$ref": "#/components/schemas/ApiMapView"
					},
					"required": true
				},
				{
					"name": "filters",
					"summary": "ApiMapFilters",
					"schema": {
						"$ref": "#/components/schemas/ApiMapFilters"
					}
				},
				{
					"name": "listType",
					"summary": "byMinPrice,byDistance,byDistanceStrict",
					"schema": {
						"description": "byMinPrice,byDistance,byDistanceStrict",
						"type": [
							"string"
						]
					}
				},
				{
					"name": "start",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "MapPharmaciesResponse",
				"summary": "ApiMapPharmaciesResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiMapPharmaciesResponse"
				}
			}
		},
		{
			"name": "map.PharmaciesByPrice",
			"summary": "PharmaciesByPrice returns list of prices and pharmacies sorted by price",
			"tags": [
				{
					"name": "map"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "data",
					"summary": "ApiMapSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiMapSearch"
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "MapPharmaciesByPriceResponse",
				"summary": "ApiMapPharmaciesResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiMapPharmaciesResponse"
				}
			},
			"errors": [
				{
					"code": 413,
					"message": "invalid count parameter"
				}
			]
		},
		{
			"name": "map.Postal",
			"summary": "Postal returns map data by postal code.",
			"tags": [
				{
					"name": "map"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "code",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "MapPostalResponse",
				"summary": "ApiMapPostal",
				"schema": {
					"$ref": "#/components/schemas/ApiMapPostal"
				}
			}
		},
		{
			"name": "map.Statistics",
			"summary": "Statistics returns statistics by filters",
			"tags": [
				{
					"name": "map"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "data",
					"summary": "ApiMapSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiMapSearch"
					},
					"required": true
				},
				{
					"name": "filters",
					"summary": "ApiMapFilters",
					"schema": {
						"$ref": "#/components/schemas/ApiMapFilters"
					}
				}
			],
			"result": {
				"name": "MapStatisticsResponse",
				"summary": "ApiMapStatistics",
				"schema": {
					"$ref": "#/components/schemas/ApiMapStatistics"
				}
			}
		},
		{
			"name": "meta.Address",
			"summary": "Returns company address.",
			"tags": [
				{
					"name": "meta"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			}
		},
		{
			"name": "meta.Get",
			"summary": "Returns one MetaDetail.",
			"tags": [
				{
					"name": "meta"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "url",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "MetaGetResponse",
				"summary": "ApiMetaDetail",
				"schema": {
					"$ref": "#/components/schemas/ApiMetaDetail"
				}
			}
		},
		{
			"name": "orders.AddableProducts",
			"summary": "Addable Products.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "OrdersAddableProductsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 401,
					"message": "authorization required"
				},
				{
					"code": 404,
					"message": "order was not found"
				}
			]
		},
		{
			"name": "orders.Calculate",
			"summary": "Calculate Cart.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "pharmacyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyNetworkId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "promocode",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "bonuses",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "OrdersCalculateResponse",
				"summary": "ApiCart",
				"schema": {
					"$ref": "#/components/schemas/ApiCart"
				}
			},
			"errors": [
				{
					"code": 807,
					"message": "promocode reserved"
				},
				{
					"code": 404,
					"message": "pharmacy was not found"
				},
				{
					"code": 803,
					"message": "insufficient bonuses balance"
				},
				{
					"code": 804,
					"message": "promocode not found"
				},
				{
					"code": 806,
					"message": "promocode referral rules"
				},
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 801,
					"message": "discount not applicable"
				},
				{
					"code": 802,
					"message": "bonuses max amount"
				},
				{
					"code": 805,
					"message": "promocode already used"
				}
			]
		},
		{
			"name": "orders.CalculateAddable",
			"summary": "Calculate Addable Products.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "OrdersCalculateAddableResponse",
				"summary": "ApiCart",
				"schema": {
					"$ref": "#/components/schemas/ApiCart"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 401,
					"message": "authorization required"
				},
				{
					"code": 402,
					"message": "invalid cart"
				},
				{
					"code": 403,
					"message": "order is not addable"
				},
				{
					"code": 404,
					"message": "order was not found"
				}
			]
		},
		{
			"name": "orders.CalculateDiscount",
			"summary": "Calculate Discount.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "pharmacyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyNetworkId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "promocode",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "bonuses",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "OrdersCalculateDiscountResponse",
				"summary": "ApiCartDiscount",
				"schema": {
					"$ref": "#/components/schemas/ApiCartDiscount"
				}
			},
			"errors": [
				{
					"code": 804,
					"message": "promocode not found"
				},
				{
					"code": 805,
					"message": "promocode already used"
				},
				{
					"code": 806,
					"message": "promocode referral rules"
				},
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "pharmacy was not found"
				},
				{
					"code": 801,
					"message": "discount not applicable"
				},
				{
					"code": 802,
					"message": "bonuses max amount"
				},
				{
					"code": 803,
					"message": "insufficient bonuses balance"
				},
				{
					"code": 807,
					"message": "promocode reserved"
				}
			]
		},
		{
			"name": "orders.Cancel",
			"summary": "Cancel.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "reasonId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "comment",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 401,
					"message": "authorization required"
				},
				{
					"code": 404,
					"message": "order was not found"
				}
			]
		},
		{
			"name": "orders.CancelReasons",
			"summary": "CancelReasons.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"params": [],
			"result": {
				"name": "OrdersCancelReasonsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiEntity"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "orders.CommitAddable",
			"summary": "Commit Addable Products.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 402,
					"message": "invalid cart"
				},
				{
					"code": 403,
					"message": "order is not addable"
				},
				{
					"code": 404,
					"message": "order was not found"
				},
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "orders.Complete",
			"summary": "Complete.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 404,
					"message": "order was not found"
				},
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "orders.Count",
			"summary": "Count Orders.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiOrderSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiOrderSearch"
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "orders.CountActive",
			"summary": "Returns active orders count (deprecated).",
			"tags": [
				{
					"name": "orders"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "orders.CountCompleted",
			"summary": "Returns completed orders count (deprecated).",
			"tags": [
				{
					"name": "orders"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "orders.Counters",
			"summary": "Returns counters.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"params": [],
			"result": {
				"name": "OrdersCountersResponse",
				"summary": "ApiOrderCounters",
				"schema": {
					"$ref": "#/components/schemas/ApiOrderCounters"
				}
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "orders.Create",
			"summary": "Create Order.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "pharmacyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "source",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pharmacyNetworkId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "deliveryInfo",
					"summary": "ApiDeliveryInfo",
					"schema": {
						"$ref": "#/components/schemas/ApiDeliveryInfo"
					}
				},
				{
					"name": "courierInfo",
					"summary": "ApiCourierInfo",
					"schema": {
						"$ref": "#/components/schemas/ApiCourierInfo"
					}
				},
				{
					"name": "paymentInfo",
					"summary": "ApiPaymentInfo",
					"schema": {
						"$ref": "#/components/schemas/ApiPaymentInfo"
					}
				},
				{
					"name": "promocode",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "bonuses",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "isPartial",
					"schema": {
						"type": [
							"boolean"
						]
					}
				}
			],
			"result": {
				"name": "OrdersCreateResponse",
				"summary": "ApiOrder",
				"schema": {
					"$ref": "#/components/schemas/ApiOrder"
				}
			},
			"errors": [
				{
					"code": 506,
					"message": "failed to update user"
				},
				{
					"code": 508,
					"message": "too many orders per minute"
				},
				{
					"code": 806,
					"message": "promocode referral rules"
				},
				{
					"code": 807,
					"message": "promocode reserved"
				},
				{
					"code": 803,
					"message": "insufficient bonuses balance"
				},
				{
					"code": 804,
					"message": "promocode not found"
				},
				{
					"code": 805,
					"message": "promocode already used"
				},
				{
					"code": 402,
					"message": "invalid cart"
				},
				{
					"code": 403,
					"message": "invalid min price"
				},
				{
					"code": 505,
					"message": "failed to verify code"
				},
				{
					"code": 507,
					"message": "failed to send sms with registration info"
				},
				{
					"code": 514,
					"message": "invalid delivery type given"
				},
				{
					"code": 603,
					"message": "failed to get provider data"
				},
				{
					"code": 701,
					"message": "invalid payment type given"
				},
				{
					"code": 501,
					"message": "failed to create order"
				},
				{
					"code": 513,
					"message": "no delivery types available"
				},
				{
					"code": 602,
					"message": "invalid courier address"
				},
				{
					"code": 605,
					"message": "no courier prices for given provider, cart and pharmacy"
				},
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "pharmacy was not found"
				},
				{
					"code": 411,
					"message": "empty delivery info"
				},
				{
					"code": 412,
					"message": "check delivery info fields"
				},
				{
					"code": 801,
					"message": "discount not applicable"
				},
				{
					"code": 802,
					"message": "bonuses max amount"
				}
			]
		},
		{
			"name": "orders.Delete",
			"summary": "Delete.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				},
				{
					"code": 404,
					"message": "order was not found"
				},
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "orders.DeliveryCount",
			"summary": "DeliveryCount (deprecated).",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			],
			"result": {
				"name": "OrdersDeliveryCountResponse",
				"summary": "ApiProviderCount",
				"schema": {
					"$ref": "#/components/schemas/ApiProviderCount"
				}
			}
		},
		{
			"name": "orders.DeliveryList",
			"summary": "DeliveryList (deprecated).",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			],
			"result": {
				"name": "OrdersDeliveryListResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiDeliveryListItem"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "orders.DeliveryTypeList",
			"summary": "Get Delivery Types for City (deprecated).",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "pharmacyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "city",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "OrdersDeliveryTypeListResponse",
				"summary": "ApiDeliveryTypeList",
				"schema": {
					"$ref": "#/components/schemas/ApiDeliveryTypeList"
				}
			}
		},
		{
			"name": "orders.Followup",
			"summary": "Followup.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "reasonId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "comment",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 401,
					"message": "authorization required"
				},
				{
					"code": 404,
					"message": "order was not found"
				}
			]
		},
		{
			"name": "orders.Get",
			"summary": "Get Orders.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiOrderSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiOrderSearch"
					}
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "OrdersGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiOrderSummary"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "orders.GetById",
			"summary": "Get order by id.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "OrdersGetByIdResponse",
				"summary": "ApiOrder",
				"schema": {
					"$ref": "#/components/schemas/ApiOrder"
				}
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				},
				{
					"code": 404,
					"message": "order was not found"
				},
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "orders.GetShared",
			"summary": "GetShared.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "sharedUUID",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "OrdersGetSharedResponse",
				"summary": "ApiOrder",
				"schema": {
					"$ref": "#/components/schemas/ApiOrder"
				}
			}
		},
		{
			"name": "orders.PharmacyCount",
			"summary": "PharmacyCount.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "OrdersPharmacyCountResponse",
				"summary": "ApiPharmacyCount",
				"schema": {
					"$ref": "#/components/schemas/ApiPharmacyCount"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 402,
					"message": "invalid cart"
				}
			]
		},
		{
			"name": "orders.PharmacyList",
			"summary": "PharmacyList (deprecated).",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "multiPickup",
					"schema": {
						"type": [
							"boolean"
						]
					}
				}
			],
			"result": {
				"name": "OrdersPharmacyListResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiMapPharmacyPrice"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 402,
					"message": "invalid cart"
				}
			]
		},
		{
			"name": "orders.Recreate",
			"summary": "Recreate.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "options",
					"summary": "ApiCartOptions",
					"schema": {
						"$ref": "#/components/schemas/ApiCartOptions"
					}
				}
			],
			"result": {
				"name": "OrdersRecreateResponse",
				"summary": "ApiUserCartResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiUserCartResponse"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "order was not found"
				},
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "orders.Share",
			"summary": "Share.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "OrdersShareResponse",
				"summary": "ApiOrderShare",
				"schema": {
					"$ref": "#/components/schemas/ApiOrderShare"
				}
			}
		},
		{
			"name": "orders.Statuses",
			"summary": "Statuses (deprecated).",
			"tags": [
				{
					"name": "orders"
				}
			],
			"params": [],
			"result": {
				"name": "OrdersStatusesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiOrderStatus"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "orders.UserUpdateCancelled",
			"summary": "UserUpdateCancelled update by user order cancelled by pharmacy.",
			"tags": [
				{
					"name": "orders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "orderId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "isCompleted",
					"schema": {
						"type": [
							"boolean"
						]
					},
					"required": true
				},
				{
					"name": "comment",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 401,
					"message": "authorization required"
				},
				{
					"code": 404,
					"message": "order was not found"
				}
			]
		},
		{
			"name": "partners.Get",
			"summary": "Get Partners.",
			"tags": [
				{
					"name": "partners"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "PartnersGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPartnerSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "partners.GetById",
			"summary": "Get Partner By Id.",
			"tags": [
				{
					"name": "partners"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "PartnersGetByIdResponse",
				"summary": "ApiPartner",
				"schema": {
					"$ref": "#/components/schemas/ApiPartner"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "partner not found"
				}
			]
		},
		{
			"name": "partners.LoyaltyProgramRules",
			"summary": "Get Partner Loyalty Program Rules By Id.",
			"tags": [
				{
					"name": "partners"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "PartnersLoyaltyProgramRulesResponse",
				"summary": "ApiPartnerLoyaltyProgramRules",
				"schema": {
					"$ref": "#/components/schemas/ApiPartnerLoyaltyProgramRules"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "partner not found"
				}
			]
		},
		{
			"name": "pharmacies.Cluster",
			"summary": "Cluster returns clustered pharmacies.",
			"tags": [
				{
					"name": "pharmacies"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiPharmacySearch",
					"schema": {
						"$ref": "#/components/schemas/ApiPharmacySearch"
					},
					"required": true
				},
				{
					"name": "view",
					"summary": "ApiMapView",
					"schema": {
						"$ref": "#/components/schemas/ApiMapView"
					},
					"required": true
				}
			],
			"result": {
				"name": "PharmaciesClusterResponse",
				"summary": "ApiPharmacyClusterResponse",
				"schema": {
					"$ref": "#/components/schemas/ApiPharmacyClusterResponse"
				}
			}
		},
		{
			"name": "pharmacies.Count",
			"summary": "Count Pharmacies.",
			"tags": [
				{
					"name": "pharmacies"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiPharmacySearch",
					"schema": {
						"$ref": "#/components/schemas/ApiPharmacySearch"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "pharmacies.Get",
			"summary": "Get Pharmacies.",
			"tags": [
				{
					"name": "pharmacies"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiPharmacySearch",
					"schema": {
						"$ref": "#/components/schemas/ApiPharmacySearch"
					},
					"required": true
				},
				{
					"name": "view",
					"summary": "ApiMapView",
					"schema": {
						"$ref": "#/components/schemas/ApiMapView"
					}
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "PharmaciesGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPharmacy"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "pharmacies.GetById",
			"summary": "Get Pharmacy By Id.",
			"tags": [
				{
					"name": "pharmacies"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "pharmacyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "PharmaciesGetByIdResponse",
				"summary": "ApiPharmacyCard",
				"schema": {
					"$ref": "#/components/schemas/ApiPharmacyCard"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "Pharmacy was not found"
				}
			]
		},
		{
			"name": "pharmacies.Statistics",
			"summary": "Statistics returns statistics by filters",
			"tags": [
				{
					"name": "pharmacies"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiPharmacySearch",
					"schema": {
						"$ref": "#/components/schemas/ApiPharmacySearch"
					},
					"required": true
				},
				{
					"name": "view",
					"summary": "ApiMapView",
					"schema": {
						"$ref": "#/components/schemas/ApiMapView"
					}
				}
			],
			"result": {
				"name": "PharmaciesStatisticsResponse",
				"summary": "ApiPharmacyStatistics",
				"schema": {
					"$ref": "#/components/schemas/ApiPharmacyStatistics"
				}
			}
		},
		{
			"name": "prescriptions.Count",
			"summary": "Count prescriptions for user.",
			"tags": [
				{
					"name": "prescriptions"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "prescriptions.Get",
			"summary": "Get prescriptions list for user.",
			"tags": [
				{
					"name": "prescriptions"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "PrescriptionsGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPrescriptionSummary"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				}
			]
		},
		{
			"name": "prescriptions.GetById",
			"summary": "Get prescription by id.",
			"tags": [
				{
					"name": "prescriptions"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "prescriptionId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "PrescriptionsGetByIdResponse",
				"summary": "ApiPrescription",
				"schema": {
					"$ref": "#/components/schemas/ApiPrescription"
				}
			},
			"errors": [
				{
					"code": 401,
					"message": "authorization required"
				},
				{
					"code": 404,
					"message": "prescription not found"
				}
			]
		},
		{
			"name": "products.AddReview",
			"summary": "Add review (deprecated).",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "productId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "name",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "rating",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "content",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "products.Analogs",
			"summary": "Get Analogs.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ProductsAnalogsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.Autocomplete",
			"summary": "Autocomplete get autocomplete info for search query.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "query",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "ProductsAutocompleteResponse",
				"summary": "ApiProductAutocompleteInfo",
				"schema": {
					"$ref": "#/components/schemas/ApiProductAutocompleteInfo"
				}
			}
		},
		{
			"name": "products.Banners",
			"summary": "Get Banners.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"name": "ProductsBannersResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductBanner"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.BestPrices",
			"summary": "Get Products With Best Prices.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ProductsBestPricesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.Count",
			"summary": "Count Products.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "products.Filters",
			"summary": "Get Filters.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				},
				{
					"name": "withoutLists",
					"schema": {
						"type": [
							"boolean"
						]
					}
				}
			],
			"result": {
				"name": "ProductsFiltersResponse",
				"summary": "ApiProductFilters",
				"schema": {
					"$ref": "#/components/schemas/ApiProductFilters"
				}
			}
		},
		{
			"name": "products.Get",
			"summary": "Get Products.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ProductsGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.GetByBarcode",
			"summary": "Get Product By Barcode.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "barcode",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			],
			"result": {
				"name": "ProductsGetByBarcodeResponse",
				"summary": "ApiProduct",
				"schema": {
					"$ref": "#/components/schemas/ApiProduct"
				}
			}
		},
		{
			"name": "products.GetById",
			"summary": "Get Product By Id.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "productId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "ProductsGetByIdResponse",
				"summary": "ApiProduct",
				"schema": {
					"$ref": "#/components/schemas/ApiProduct"
				}
			}
		},
		{
			"name": "products.InstructionFields",
			"summary": "Get Instruction Fields.",
			"tags": [
				{
					"name": "products"
				}
			],
			"params": [],
			"result": {
				"name": "ProductsInstructionFieldsResponse",
				"summary": "ApiInstructionFields",
				"schema": {
					"$ref": "#/components/schemas/ApiInstructionFields"
				}
			}
		},
		{
			"name": "products.Instructions",
			"summary": "Get Instructions.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"name": "ProductsInstructionsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiSEOInstruction"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.MainProperties",
			"summary": "Get Main Properties.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"name": "ProductsMainPropertiesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPropertyValue"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.PartnerPrices",
			"summary": "Get Product Prices Grouped By Partners.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "deliveryType",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ProductsPartnerPricesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductPartnerPrice"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "city not found"
				}
			]
		},
		{
			"name": "products.PopularByCategory",
			"summary": "Popular By Category.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "categoryId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ProductsPopularByCategoryResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.PricesByCart",
			"summary": "Get Product Prices By Cart.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cart",
					"schema": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "ProductsPricesByCartResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductPrice"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.PricesCount",
			"summary": "Prices Count.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "productId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "products.PricesHistory",
			"summary": "Get Prices History.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "productId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ProductsPricesHistoryResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductPriceHistory"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "city or product not found"
				}
			]
		},
		{
			"name": "products.Properties",
			"summary": "Get Properties.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"name": "ProductsPropertiesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProperty"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.PropertiesByValues",
			"summary": "Get PropertiesByValues.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "valueIds",
					"schema": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ProductsPropertiesByValuesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProperty"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.PropertyValues",
			"summary": "Get PropertyValues.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				},
				{
					"name": "propertyId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ProductsPropertyValuesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPropertyValue"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.Related",
			"summary": "Related Products.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "productIds",
					"schema": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ProductsRelatedResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.Reviews",
			"summary": "Get reviews (deprecated).",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "productId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pharmacyIds",
					"schema": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			],
			"result": {
				"name": "ProductsReviewsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductReview"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "products.Useful",
			"summary": "Useful Products.",
			"tags": [
				{
					"name": "products"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "count",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "ProductsUsefulResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "profile.CountFavoriteProducts",
			"summary": "Count products from favorites.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProfileFavoriteProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProfileFavoriteProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			},
			"errors": [
				{
					"code": 401,
					"message": "invalid authorization"
				}
			]
		},
		{
			"name": "profile.CountOrderProducts",
			"summary": "Count products from orders.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProfileOrderProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProfileOrderProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "profile.Delete",
			"summary": "Delete removes site user profile.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "comment",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "profile.FavoritePharmacies",
			"summary": "Get Favorite Pharmacies [WIP].",
			"tags": [
				{
					"name": "profile"
				}
			],
			"params": [],
			"result": {
				"name": "ProfileFavoritePharmaciesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPharmacy"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 401,
					"message": "invalid authorization"
				}
			]
		},
		{
			"name": "profile.FavoriteProductIds",
			"summary": "Get site user favorite product ids.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerArrayResponse"
			}
		},
		{
			"name": "profile.FavoriteProducts",
			"summary": "Get Favorite Products.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "search",
					"summary": "ApiProfileFavoriteProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProfileFavoriteProductSearch"
					},
					"required": true
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ProfileFavoriteProductsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 401,
					"message": "invalid authorization"
				}
			]
		},
		{
			"name": "profile.FavoritesAdd",
			"summary": "Add object to Favorites.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pType",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid type"
				},
				{
					"code": 401,
					"message": "invalid authorization"
				},
				{
					"code": 404,
					"message": "object not found"
				},
				{
					"code": 510,
					"message": "max favorites limit reached"
				}
			]
		},
		{
			"name": "profile.FavoritesRemove",
			"summary": "Remove object from Favorites.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "pType",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid type"
				},
				{
					"code": 401,
					"message": "invalid authorization"
				},
				{
					"code": 404,
					"message": "object not found"
				}
			]
		},
		{
			"name": "profile.Get",
			"summary": "Get Profile.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"params": [],
			"result": {
				"name": "ProfileGetResponse",
				"summary": "ApiProfile",
				"schema": {
					"$ref": "#/components/schemas/ApiProfile"
				}
			},
			"errors": [
				{
					"code": 401,
					"message": "invalid authorization"
				}
			]
		},
		{
			"name": "profile.Licence",
			"summary": "Licence text.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			}
		},
		{
			"name": "profile.OrderProducts",
			"summary": "Get products from orders.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProfileOrderProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProfileOrderProductSearch"
					},
					"required": true
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ProfileOrderProductsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "profile.PrivacyAgreement",
			"summary": "Privacy agreement text.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			}
		},
		{
			"name": "profile.Referral",
			"summary": "Referral.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"params": [],
			"result": {
				"name": "ProfileReferralResponse",
				"schema": {
					"$ref": "#/components/schemas/ProfileReferralResponse"
				}
			}
		},
		{
			"name": "profile.TrackDevice",
			"summary": "Track Device IDs (deprecated).",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "appsFlyerDeviceId",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "idfa",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "advertisingId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "profile.TrackDeviceToken",
			"summary": "Track Device Token.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "idfa",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "advertisingId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "fcmToken",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "appMetricaDeviceId",
					"schema": {
						"type": [
							"string"
						]
					}
				},
				{
					"name": "deeplinkUrl",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			}
		},
		{
			"name": "profile.Update",
			"summary": "Update profile\n\n\n\nUpdates profile based on input data.\n\nCould update a particular field or all of them altogether (Depends on how many input fields are provided).\n\nEmail could be deleted if empty string or 'null' string provided.",
			"tags": [
				{
					"name": "profile"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "profile",
					"summary": "ApiProfileUpdate",
					"schema": {
						"$ref": "#/components/schemas/ApiProfileUpdate"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 502,
					"message": "given name is invalid"
				},
				{
					"code": 503,
					"message": "given email is invalid"
				},
				{
					"code": 504,
					"message": "given cityId is invalid"
				},
				{
					"code": 505,
					"message": "given gender is invalid"
				},
				{
					"code": 506,
					"message": "given birthDate is invalid"
				},
				{
					"code": 540,
					"message": "failed to update user"
				}
			]
		},
		{
			"name": "promo.Banners",
			"summary": "Get Banners.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "bannerType",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "PromoBannersResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiBanner"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "promo.Brands",
			"summary": "Get Brands.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "categoryId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "PromoBrandsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiBrand"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "promo.MainBrands",
			"summary": "MainBrands returns popular brands for main page.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"params": [],
			"result": {
				"name": "PromoMainBrandsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiMainBrand"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "promo.MainPartners",
			"summary": "MainPartners returns partners for main page.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"params": [],
			"result": {
				"name": "PromoMainPartnersResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiMainPartner"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "promo.PopularQueries",
			"summary": "Get popular search queries.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"params": [],
			"result": {
				"name": "PromoPopularQueriesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPopularQuery"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "promo.ProductsOfTheDay",
			"summary": "Products Of The Day.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "categoryId",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "PromoProductsOfTheDayResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductOfTheDay"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "promo.PromocodeBanner",
			"summary": "Get Promocode Banner.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"params": [],
			"result": {
				"name": "PromoPromocodeBannerResponse",
				"schema": {
					"$ref": "#/components/schemas/PromoPromocodeBannerResponse"
				}
			}
		},
		{
			"name": "promo.SearchProducts",
			"summary": "Get Search Products.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"params": [],
			"result": {
				"name": "PromoSearchProductsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPromoItem"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "promo.SearchQueries",
			"summary": "deprecated use PopularQueries instead.\nGet Search Queries.",
			"tags": [
				{
					"name": "promo"
				}
			],
			"params": [],
			"result": {
				"name": "PromoSearchQueriesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiPromoItem"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "reminders.Add",
			"summary": "Add Reminder.",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiReminderForm",
					"schema": {
						"$ref": "#/components/schemas/ApiReminderForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "RemindersAddResponse",
				"summary": "ApiProductReminder",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReminder"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "Validation Error"
				},
				{
					"code": 500,
					"message": "Internal Error"
				}
			]
		},
		{
			"name": "reminders.Delete",
			"summary": "Delete Reminder.",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"summary": "int",
					"schema": {
						"description": "int",
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 404,
					"message": "Not Found"
				},
				{
					"code": 500,
					"message": "Internal Error"
				}
			]
		},
		{
			"name": "reminders.Get",
			"summary": "Get Reminders list",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"params": [],
			"result": {
				"name": "RemindersGetResponse",
				"summary": "[]ApiProductReminderSummary",
				"schema": {
					"description": "[]ApiProductReminderSummary",
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductReminderSummary"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "Not Found"
				},
				{
					"code": 500,
					"message": "Internal Error"
				}
			]
		},
		{
			"name": "reminders.GetById",
			"summary": "Get Reminder by id.",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"summary": "int",
					"schema": {
						"description": "int",
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "RemindersGetByIdResponse",
				"summary": "ApiProductReminder",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReminder"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "Not Found"
				},
				{
					"code": 500,
					"message": "Internal Error"
				}
			]
		},
		{
			"name": "reminders.MedicationRules",
			"summary": "Get medication rules list",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"params": [],
			"result": {
				"name": "RemindersMedicationRulesResponse",
				"summary": "[]ApiValue",
				"schema": {
					"description": "[]ApiValue",
					"items": [
						{
							"$ref": "#/components/schemas/ApiValue"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "reminders.ScheduleAutocomplete",
			"summary": "Generate reminder schedule",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "frequency",
					"summary": "maximum value is 12",
					"schema": {
						"description": "maximum value is 12",
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "RemindersScheduleAutocompleteResponse",
				"summary": "[]ApiReminderScheduleItem",
				"schema": {
					"description": "[]ApiReminderScheduleItem",
					"items": [
						{
							"$ref": "#/components/schemas/ApiReminderScheduleItem"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "reminders.Update",
			"summary": "Update Reminder.",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiReminderForm",
					"schema": {
						"$ref": "#/components/schemas/ApiReminderForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "RemindersUpdateResponse",
				"summary": "ApiProductReminder",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReminder"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "Not Found"
				},
				{
					"code": 500,
					"message": "Internal Error"
				},
				{
					"code": 400,
					"message": "Validation Error"
				}
			]
		},
		{
			"name": "reminders.UpdateProgress",
			"summary": "Update reminder progress schedule",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiReminderProgressForm",
					"schema": {
						"$ref": "#/components/schemas/ApiReminderProgressForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "RemindersUpdateProgressResponse",
				"summary": "ApiProductReminder",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReminder"
				}
			}
		},
		{
			"name": "reminders.Validate",
			"summary": "Validate Reminder.",
			"tags": [
				{
					"name": "reminders"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiReminderForm",
					"schema": {
						"$ref": "#/components/schemas/ApiReminderForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "RemindersValidateResponse",
				"summary": "[]FieldError",
				"schema": {
					"description": "[]FieldError",
					"items": [
						{
							"$ref": "#/components/schemas/FieldError"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 402,
					"message": "reminder with product already exists"
				}
			]
		},
		{
			"name": "reviews.Add",
			"summary": "Add Review.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiReviewForm",
					"schema": {
						"$ref": "#/components/schemas/ApiReviewForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsAddResponse",
				"summary": "ApiProductReview",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReview"
				}
			},
			"errors": [
				{
					"code": 402,
					"message": "review already exists"
				},
				{
					"code": 403,
					"message": "too many reviews"
				}
			]
		},
		{
			"name": "reviews.AddComment",
			"summary": "Add Review Comment.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiReviewCommentForm",
					"schema": {
						"$ref": "#/components/schemas/ApiReviewCommentForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsAddCommentResponse",
				"summary": "ApiProductReviewComment",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReviewComment"
				}
			},
			"errors": [
				{
					"code": 403,
					"message": "too many comments"
				}
			]
		},
		{
			"name": "reviews.Complaint",
			"summary": "Complaint Review.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "complaint",
					"summary": "ApiReviewComplaint",
					"schema": {
						"$ref": "#/components/schemas/ApiReviewComplaint"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/NullResponse"
			},
			"errors": [
				{
					"code": 403,
					"message": "too many complaints per 24 hours"
				},
				{
					"code": 404,
					"message": "review not found"
				}
			]
		},
		{
			"name": "reviews.ComplaintComment",
			"summary": "Complaint Comment.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "complaint",
					"summary": "ApiReviewCommentComplaint",
					"schema": {
						"$ref": "#/components/schemas/ApiReviewCommentComplaint"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/NullResponse"
			},
			"errors": [
				{
					"code": 403,
					"message": "too many complaints per 24 hours"
				},
				{
					"code": 404,
					"message": "review comment not found"
				}
			]
		},
		{
			"name": "reviews.Count",
			"summary": "Count Reviews.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/IntegerResponse"
			}
		},
		{
			"name": "reviews.Dislike",
			"summary": "Dislike Review.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsDislikeResponse",
				"summary": "ApiProductReviewRating",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReviewRating"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "review not found"
				}
			]
		},
		{
			"name": "reviews.DislikeComment",
			"summary": "Dislike Comment.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsDislikeCommentResponse",
				"summary": "ApiProductReviewCommentRating",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReviewCommentRating"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "review comment not found"
				}
			]
		},
		{
			"name": "reviews.Get",
			"summary": "Get Reviews.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				},
				{
					"name": "page",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "pageSize",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "ReviewsGetResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiProductReview"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "reviews.Like",
			"summary": "Like Review.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsLikeResponse",
				"summary": "ApiProductReviewRating",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReviewRating"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "review not found"
				}
			]
		},
		{
			"name": "reviews.LikeComment",
			"summary": "Like Comment.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsLikeCommentResponse",
				"summary": "ApiProductReviewCommentRating",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReviewCommentRating"
				}
			},
			"errors": [
				{
					"code": 404,
					"message": "review comment not found"
				}
			]
		},
		{
			"name": "reviews.Statistics",
			"summary": "Get reviews statistics.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "search",
					"summary": "ApiProductSearch",
					"schema": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsStatisticsResponse",
				"summary": "ApiProductReviewStatistics",
				"schema": {
					"$ref": "#/components/schemas/ApiProductReviewStatistics"
				}
			}
		},
		{
			"name": "reviews.Validate",
			"summary": "Validate Review.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiReviewForm",
					"schema": {
						"$ref": "#/components/schemas/ApiReviewForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsValidateResponse",
				"summary": "[]FieldError",
				"schema": {
					"description": "[]FieldError",
					"items": [
						{
							"$ref": "#/components/schemas/FieldError"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "reviews.ValidateComment",
			"summary": "Validate Review Comment.",
			"tags": [
				{
					"name": "reviews"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiReviewCommentForm",
					"schema": {
						"$ref": "#/components/schemas/ApiReviewCommentForm"
					},
					"required": true
				}
			],
			"result": {
				"name": "ReviewsValidateCommentResponse",
				"summary": "[]FieldError",
				"schema": {
					"description": "[]FieldError",
					"items": [
						{
							"$ref": "#/components/schemas/FieldError"
						}
					],
					"type": [
						"array"
					]
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				}
			]
		},
		{
			"name": "site.BusinessCounters",
			"summary": "BusinessCounters.",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"name": "SiteBusinessCountersResponse",
				"summary": "ApiSiteBusinessCounters",
				"schema": {
					"$ref": "#/components/schemas/ApiSiteBusinessCounters"
				}
			}
		},
		{
			"name": "site.Counters",
			"summary": "Counters.",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"name": "SiteCountersResponse",
				"summary": "ApiSiteCounters",
				"schema": {
					"$ref": "#/components/schemas/ApiSiteCounters"
				}
			}
		},
		{
			"name": "site.DeliveryNotice",
			"summary": "Returns delivery notice (deprecated).",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			}
		},
		{
			"name": "site.DistanceTradingRules",
			"summary": "DistanceTradingRules text.",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			}
		},
		{
			"name": "site.FAQ",
			"summary": "FAQ",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "SiteFAQResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiFAQCategory"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "site.GetKitById",
			"summary": "Get Kit By Id.",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "SiteGetKitByIdResponse",
				"summary": "ApiKit",
				"schema": {
					"$ref": "#/components/schemas/ApiKit"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city or kit was not found"
				}
			]
		},
		{
			"name": "site.GetKitByUrl",
			"summary": "Get Kit By Url.",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "url",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cartId",
					"schema": {
						"type": [
							"string"
						]
					}
				}
			],
			"result": {
				"name": "SiteGetKitByUrlResponse",
				"summary": "ApiKit",
				"schema": {
					"$ref": "#/components/schemas/ApiKit"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city or kit was not found"
				}
			]
		},
		{
			"name": "site.GetKits",
			"summary": "Get Kits List.",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "SiteGetKitsResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiKitSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "site.GetKitsByProducer",
			"summary": "Get Kits List By Producer.",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				},
				{
					"name": "producerId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "SiteGetKitsByProducerResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiKitSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "site.GetPartnerById",
			"summary": "Get Partner By Id.",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "id",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "SiteGetPartnerByIdResponse",
				"summary": "ApiKit",
				"schema": {
					"$ref": "#/components/schemas/ApiKit"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city or kit was not found"
				}
			]
		},
		{
			"name": "site.GetPartnerByUrl",
			"summary": "Get Partner By Url.",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "url",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					},
					"required": true
				}
			],
			"result": {
				"name": "SiteGetPartnerByUrlResponse",
				"summary": "ApiKit",
				"schema": {
					"$ref": "#/components/schemas/ApiKit"
				}
			},
			"errors": [
				{
					"code": 400,
					"message": "invalid params"
				},
				{
					"code": 404,
					"message": "city or kit was not found"
				}
			]
		},
		{
			"name": "site.GetPartners",
			"summary": "Get Partner List.",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"name": "SiteGetPartnersResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiKitSummary"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "site.HolidaysNotice",
			"summary": "Returns holidays notice (deprecated).",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			}
		},
		{
			"name": "site.LegalEntities",
			"summary": "Legal entities.",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"name": "SiteLegalEntitiesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiLegalEntity"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "site.LegalPartners",
			"summary": "Legal partners.",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"name": "SiteLegalPartnersResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiLegalPartner"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "site.OfficeBranches",
			"summary": "Office branches",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"name": "SiteOfficeBranchesResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiOfficeBranch"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "site.ReadingLinks",
			"summary": "Reading Links",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"name": "SiteReadingLinksResponse",
				"schema": {
					"items": [
						{
							"$ref": "#/components/schemas/ApiReadingLink"
						}
					],
					"type": [
						"array"
					]
				}
			}
		},
		{
			"name": "site.ReferralProgramRules",
			"summary": "ReferralProgramRules text.",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/StringResponse"
			}
		},
		{
			"name": "site.SendFeedback",
			"summary": "SendFeedback",
			"tags": [
				{
					"name": "site"
				}
			],
			"paramStructure": "by-name",
			"params": [
				{
					"name": "formData",
					"summary": "ApiFeedback",
					"schema": {
						"$ref": "#/components/schemas/ApiFeedback"
					},
					"required": true
				},
				{
					"name": "formName",
					"schema": {
						"type": [
							"string"
						]
					},
					"required": true
				},
				{
					"name": "cityId",
					"schema": {
						"type": [
							"integer"
						]
					}
				}
			],
			"result": {
				"$ref": "#/components/contentDescriptors/BooleanResponse"
			},
			"errors": [
				{
					"code": 404,
					"message": "form name was not found"
				},
				{
					"code": 503,
					"message": "given email is invalid"
				},
				{
					"code": 505,
					"message": "given phone number is invalid"
				}
			]
		},
		{
			"name": "site.TopSearchQueries",
			"summary": "Get Top Search Queries.",
			"tags": [
				{
					"name": "site"
				}
			],
			"params": [],
			"result": {
				"$ref": "#/components/contentDescriptors/StringArrayResponse"
			}
		}
	],
	"components": {
		"schemas": {
			"ApiAlphabeticalGroup": {
				"required": [
					"hasMore",
					"items",
					"title",
					"value"
				],
				"properties": {
					"hasMore": {
						"type": [
							"boolean"
						]
					},
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"value": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiAnalyticsParams": {
				"required": [],
				"properties": {
					"admitaduid": {
						"description": "Admitad uid",
						"type": [
							"string"
						]
					},
					"deeplinkUrl": {
						"description": "Deeplink Url",
						"type": [
							"string"
						]
					},
					"experimentId": {
						"description": "Experiment ID",
						"type": [
							"string"
						]
					},
					"experimentVariant": {
						"description": "Experiment Variant",
						"type": [
							"string"
						]
					},
					"page": {
						"description": "Event page",
						"type": [
							"string"
						]
					},
					"partnerSource": {
						"description": "Partner source",
						"type": [
							"string"
						]
					},
					"referrer": {
						"description": "Event referrer",
						"type": [
							"string"
						]
					},
					"slickjumpId": {
						"description": "ID for tracking system slickjump",
						"type": [
							"string"
						]
					},
					"turboapp": {
						"description": "Yandex Turboapp",
						"type": [
							"string"
						]
					},
					"utmCampaign": {
						"description": "UTM parameter campaign",
						"type": [
							"string"
						]
					},
					"utmContent": {
						"description": "UTM parameter content",
						"type": [
							"string"
						]
					},
					"utmMedium": {
						"description": "UTM parameter medium",
						"type": [
							"string"
						]
					},
					"utmSource": {
						"description": "UTM parameter source",
						"type": [
							"string"
						]
					},
					"utmTerm": {
						"description": "UTM parameter term",
						"type": [
							"string"
						]
					},
					"widgetUrl": {
						"description": "Widget Url",
						"type": [
							"string"
						]
					},
					"yclid": {
						"description": "Yandex yclid",
						"type": [
							"string"
						]
					},
					"yuid": {
						"description": "Yandex uid",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiAppSettings": {
				"required": [
					"readOnly",
					"payoutDisabled",
					"webvisorDisabled",
					"cashbackDisabled",
					"deliveryPaymentDisabled",
					"discountDisabled",
					"apps"
				],
				"properties": {
					"apps": {
						"$ref": "#/components/schemas/ApiAppSettingsApps"
					},
					"cashbackDisabled": {
						"description": "Cashback is disabled",
						"type": [
							"boolean"
						]
					},
					"deliveryPaymentDisabled": {
						"description": "Delivery Payment is Disabled",
						"type": [
							"boolean"
						]
					},
					"discountDisabled": {
						"description": "Discount Program is Disabled",
						"type": [
							"boolean"
						]
					},
					"payoutDisabled": {
						"description": "Payout is disabled",
						"type": [
							"boolean"
						]
					},
					"readOnly": {
						"description": "API works in readonly mode",
						"type": [
							"boolean"
						]
					},
					"webvisorDisabled": {
						"description": "Webvisor is disabled",
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiAppSettingsApps": {
				"required": [
					"mapAddressHintAndroid",
					"mapAddressHintIOS",
					"lastSupportedVersionAndroid",
					"lastActualVersionAndroid",
					"lastSupportedVersionIOS",
					"lastActualVersionIOS",
					"webViewAndroid",
					"webViewIOS"
				],
				"properties": {
					"lastActualVersionAndroid": {
						"description": "Last actual version for Android app",
						"type": [
							"string"
						]
					},
					"lastActualVersionIOS": {
						"description": "Last actual version for iOS app",
						"type": [
							"string"
						]
					},
					"lastSupportedVersionAndroid": {
						"description": "Last supported version for Android app",
						"type": [
							"string"
						]
					},
					"lastSupportedVersionIOS": {
						"description": "Last supported version for iOS app",
						"type": [
							"string"
						]
					},
					"mapAddressHintAndroid": {
						"description": "Show map address hint for Android app",
						"type": [
							"boolean"
						]
					},
					"mapAddressHintIOS": {
						"description": "Show map address hint for iOS app",
						"type": [
							"boolean"
						]
					},
					"webViewAndroid": {
						"description": "Url for web view for Android app",
						"type": [
							"string"
						]
					},
					"webViewIOS": {
						"description": "Url for web view for iOS app",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiArticle": {
				"required": [
					"disclaimer",
					"bigImage",
					"categories",
					"myRating",
					"authorSummary",
					"relatedArticles",
					"commentsCount",
					"alias",
					"title",
					"author",
					"tags",
					"disableAds",
					"articleId",
					"publicationDate",
					"image",
					"rubric",
					"rating",
					"content",
					"smallImage",
					"readingTime",
					"totalViews",
					"ratingCount",
					"foreword"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"articleId": {
						"type": [
							"integer"
						]
					},
					"author": {
						"type": [
							"string"
						]
					},
					"authorSummary": {
						"$ref": "#/components/schemas/ApiArticleAuthorSummary"
					},
					"bigImage": {
						"type": [
							"string"
						]
					},
					"categories": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCategory"
							}
						],
						"type": [
							"array"
						]
					},
					"commentsCount": {
						"type": [
							"integer"
						]
					},
					"content": {
						"type": [
							"string"
						]
					},
					"disableAds": {
						"type": [
							"boolean"
						]
					},
					"disclaimer": {
						"type": [
							"string"
						]
					},
					"foreword": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"myRating": {
						"type": [
							"integer"
						]
					},
					"publicationDate": {
						"type": [
							"string"
						]
					},
					"rating": {
						"type": [
							"number"
						]
					},
					"ratingCount": {
						"type": [
							"integer"
						]
					},
					"readingTime": {
						"type": [
							"integer"
						]
					},
					"relatedArticles": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiArticleSummary"
							}
						],
						"type": [
							"array"
						]
					},
					"rubric": {
						"$ref": "#/components/schemas/ApiArticleRubric"
					},
					"smallImage": {
						"type": [
							"string"
						]
					},
					"tags": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiArticleTag"
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"totalViews": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiArticleAuthor": {
				"required": [
					"education",
					"articlesRating",
					"articles",
					"image",
					"experienceYears",
					"position",
					"placesOfWork",
					"articlesCount",
					"articleAuthorId",
					"title",
					"placeOfWork",
					"licenses",
					"alias"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"articleAuthorId": {
						"type": [
							"integer"
						]
					},
					"articles": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiArticle"
							}
						],
						"type": [
							"array"
						]
					},
					"articlesCount": {
						"type": [
							"integer"
						]
					},
					"articlesRating": {
						"type": [
							"number"
						]
					},
					"education": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"email": {
						"type": [
							"string"
						]
					},
					"experienceYears": {
						"type": [
							"integer"
						]
					},
					"facebook": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"instagram": {
						"type": [
							"string"
						]
					},
					"licenses": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"placeOfWork": {
						"$ref": "#/components/schemas/ApiValue",
						"description": "deprecated"
					},
					"placesOfWork": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"position": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"vkontakte": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiArticleAuthorSummary": {
				"required": [
					"articleAuthorId",
					"title",
					"alias",
					"image",
					"position",
					"experienceYears"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"articleAuthorId": {
						"type": [
							"integer"
						]
					},
					"experienceYears": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"position": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiArticleComment": {
				"required": [
					"plusVotes",
					"minusVotes",
					"createdAt",
					"comments",
					"content",
					"siteUserId",
					"name",
					"isMyPlus",
					"isMyMinus",
					"commentId"
				],
				"properties": {
					"article": {
						"$ref": "#/components/schemas/ApiArticle"
					},
					"author": {
						"$ref": "#/components/schemas/ApiArticleAuthorSummary"
					},
					"commentId": {
						"type": [
							"integer"
						]
					},
					"comments": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiArticleComment"
							}
						],
						"type": [
							"array"
						]
					},
					"content": {
						"type": [
							"string"
						]
					},
					"createdAt": {
						"type": [
							"string"
						]
					},
					"isMyMinus": {
						"type": [
							"boolean"
						]
					},
					"isMyPlus": {
						"type": [
							"boolean"
						]
					},
					"minusVotes": {
						"type": [
							"integer"
						]
					},
					"name": {
						"type": [
							"string"
						]
					},
					"plusVotes": {
						"type": [
							"integer"
						]
					},
					"siteUserId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiArticleCommentComplaint": {
				"required": [
					"commentId",
					"content"
				],
				"properties": {
					"commentId": {
						"type": [
							"integer"
						]
					},
					"content": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiArticleCommentForm": {
				"required": [
					"articleId",
					"content"
				],
				"properties": {
					"articleId": {
						"type": [
							"integer"
						]
					},
					"commentId": {
						"type": [
							"integer"
						]
					},
					"content": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiArticleCommentSearch": {
				"required": [],
				"properties": {
					"articleId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiArticleCommentsCount": {
				"required": [
					"total",
					"parent"
				],
				"properties": {
					"parent": {
						"type": [
							"integer"
						]
					},
					"total": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiArticleRubric": {
				"required": [
					"alias",
					"title"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiArticleSearch": {
				"required": [],
				"properties": {
					"authorId": {
						"type": [
							"integer"
						]
					},
					"query": {
						"type": [
							"string"
						]
					},
					"rubricAlias": {
						"type": [
							"string"
						]
					},
					"tagAlias": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiArticleSummary": {
				"required": [
					"alias",
					"image",
					"rubric",
					"articleId",
					"title"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"articleId": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"rubric": {
						"$ref": "#/components/schemas/ApiArticleRubric"
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiArticleTag": {
				"required": [
					"title",
					"alias"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiAuthValidateRegister": {
				"required": [
					"isValidPhone",
					"isValid",
					"isValidEmail",
					"isValidName"
				],
				"properties": {
					"isValid": {
						"type": [
							"boolean"
						]
					},
					"isValidEmail": {
						"type": [
							"boolean"
						]
					},
					"isValidName": {
						"type": [
							"boolean"
						]
					},
					"isValidPhone": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiAutocompleteCategory": {
				"required": [
					"image",
					"category"
				],
				"properties": {
					"category": {
						"$ref": "#/components/schemas/ApiCategory"
					},
					"image": {
						"type": [
							"string"
						]
					},
					"imageInfo": {
						"$ref": "#/components/schemas/ApiImageInfo"
					}
				}
			},
			"ApiAutocompleteSuggest": {
				"required": [
					"title",
					"productIds"
				],
				"properties": {
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"query": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"trade": {
						"$ref": "#/components/schemas/ApiPropertyValue"
					}
				}
			},
			"ApiBanner": {
				"required": [
					"type",
					"orderNumber",
					"url",
					"campaign",
					"productIds",
					"label",
					"image"
				],
				"properties": {
					"campaign": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"label": {
						"type": [
							"string"
						]
					},
					"orderNumber": {
						"type": [
							"integer"
						]
					},
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"type": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiBrand": {
				"required": [
					"imageHash",
					"campaign",
					"productIds",
					"title",
					"url"
				],
				"properties": {
					"campaign": {
						"type": [
							"string"
						]
					},
					"imageHash": {
						"type": [
							"string"
						]
					},
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCart": {
				"required": [
					"pickupDate",
					"economy",
					"price",
					"pharmacy",
					"reservationEndsAtText",
					"discount",
					"discountType",
					"items",
					"reservationEndsAt",
					"pickupIsToday",
					"discountRules",
					"isValid",
					"pickupDateText",
					"pickupDateRelativeText"
				],
				"properties": {
					"discount": {
						"type": [
							"integer"
						]
					},
					"discountCard": {
						"$ref": "#/components/schemas/ApiDiscountCard"
					},
					"discountRules": {
						"$ref": "#/components/schemas/ApiCartDiscountRules"
					},
					"discountType": {
						"type": [
							"string"
						]
					},
					"economy": {
						"type": [
							"integer"
						]
					},
					"isValid": {
						"type": [
							"boolean"
						]
					},
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartItem"
							}
						],
						"type": [
							"array"
						]
					},
					"loyaltyProgram": {
						"$ref": "#/components/schemas/ApiCartLoyaltyProgram"
					},
					"notice": {
						"type": [
							"string"
						]
					},
					"pharmacy": {
						"$ref": "#/components/schemas/ApiPharmacy"
					},
					"pharmacyNetwork": {
						"$ref": "#/components/schemas/ApiPharmacyNetwork"
					},
					"pickupDate": {
						"type": [
							"string"
						]
					},
					"pickupDateRelativeText": {
						"type": [
							"string"
						]
					},
					"pickupDateText": {
						"type": [
							"string"
						]
					},
					"pickupIsToday": {
						"type": [
							"boolean"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"reservationEndsAt": {
						"type": [
							"string"
						]
					},
					"reservationEndsAtText": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCartAnalogItem": {
				"required": [
					"analogType",
					"target"
				],
				"properties": {
					"analog": {
						"$ref": "#/components/schemas/ApiCartAnalogProduct"
					},
					"analogType": {
						"type": [
							"string"
						]
					},
					"target": {
						"$ref": "#/components/schemas/ApiCartTargetProduct"
					}
				}
			},
			"ApiCartAnalogProduct": {
				"required": [
					"product",
					"count",
					"price"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"product": {
						"$ref": "#/components/schemas/ApiProductSummary"
					}
				}
			},
			"ApiCartContext": {
				"required": [],
				"properties": {
					"geoObjectId": {
						"type": [
							"integer"
						]
					},
					"pharmacies": {
						"$ref": "#/components/schemas/ApiCartContextPharmacies"
					}
				}
			},
			"ApiCartContextPharmacies": {
				"required": [
					"pharmacyIds",
					"pickupOnly"
				],
				"properties": {
					"pharmacyIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"pickupOnly": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiCartContextPharmaciesResponse": {
				"required": [
					"pharmacyIds",
					"pickupOnly",
					"pharmacyCount"
				],
				"properties": {
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"pharmacyIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"pickupOnly": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiCartContextResponse": {
				"required": [],
				"properties": {
					"geoObjectId": {
						"type": [
							"integer"
						]
					},
					"pharmacies": {
						"$ref": "#/components/schemas/ApiCartContextPharmaciesResponse"
					}
				}
			},
			"ApiCartDiscount": {
				"required": [
					"price",
					"economy",
					"discount"
				],
				"properties": {
					"discount": {
						"type": [
							"integer"
						]
					},
					"economy": {
						"type": [
							"integer"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiCartDiscountRules": {
				"required": [
					"hasReferralOrders",
					"isBonusesApplicable",
					"isPossible",
					"maxAmount",
					"minOrderAmount",
					"isPromocodeApplicable",
					"isBonusesPossible",
					"rules",
					"isAvailable",
					"amount",
					"isPromocodePossible"
				],
				"properties": {
					"amount": {
						"type": [
							"number"
						]
					},
					"hasReferralOrders": {
						"type": [
							"boolean"
						]
					},
					"isAvailable": {
						"type": [
							"boolean"
						]
					},
					"isBonusesApplicable": {
						"type": [
							"boolean"
						]
					},
					"isBonusesPossible": {
						"type": [
							"boolean"
						]
					},
					"isPossible": {
						"type": [
							"boolean"
						]
					},
					"isPromocodeApplicable": {
						"type": [
							"boolean"
						]
					},
					"isPromocodePossible": {
						"type": [
							"boolean"
						]
					},
					"maxAmount": {
						"type": [
							"integer"
						]
					},
					"minOrderAmount": {
						"type": [
							"integer"
						]
					},
					"rules": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCartItem": {
				"required": [
					"count",
					"price",
					"isLowQuantity",
					"expirationDate",
					"productId"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"error": {
						"type": [
							"string"
						]
					},
					"expirationDate": {
						"type": [
							"string"
						]
					},
					"isLowQuantity": {
						"type": [
							"boolean"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiCartLoyaltyProgram": {
				"required": [
					"partner",
					"price"
				],
				"properties": {
					"partner": {
						"$ref": "#/components/schemas/ApiPartnerSummary"
					},
					"price": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiCartOptions": {
				"required": [
					"isPartial"
				],
				"properties": {
					"isPartial": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiCartProduct": {
				"required": [
					"count",
					"product"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"product": {
						"$ref": "#/components/schemas/ApiProduct"
					}
				}
			},
			"ApiCartRequestItem": {
				"required": [
					"productId",
					"count"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiCartShare": {
				"required": [
					"url"
				],
				"properties": {
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCartTargetProduct": {
				"required": [
					"productId",
					"count",
					"price"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiCashbackCampaign": {
				"required": [
					"categoryId",
					"title",
					"content",
					"startDate",
					"endDate",
					"image",
					"products",
					"tooltips",
					"id",
					"alias",
					"cashbackType"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"cashbackType": {
						"$ref": "#/components/schemas/ApiCashbackType"
					},
					"categoryId": {
						"type": [
							"integer"
						]
					},
					"content": {
						"type": [
							"string"
						]
					},
					"endDate": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"products": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductSummary"
							}
						],
						"type": [
							"array"
						]
					},
					"startDate": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"tooltips": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCashbackTooltip"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiCashbackCampaignSummary": {
				"required": [
					"startDate",
					"image",
					"cashbackType",
					"categoryId",
					"title",
					"alias",
					"content",
					"endDate",
					"id"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"cashbackType": {
						"$ref": "#/components/schemas/ApiCashbackType"
					},
					"categoryId": {
						"type": [
							"integer"
						]
					},
					"content": {
						"type": [
							"string"
						]
					},
					"endDate": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"startDate": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackCategory": {
				"required": [
					"id",
					"title",
					"alias"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackCounters": {
				"required": [
					"balance",
					"outcomeAmount",
					"newIncomeCount",
					"newIncomeAmount"
				],
				"properties": {
					"balance": {
						"description": "Current user balance amount",
						"type": [
							"number"
						]
					},
					"newIncomeAmount": {
						"description": "Amount of recently approved receipts with cashback items",
						"type": [
							"number"
						]
					},
					"newIncomeCount": {
						"description": "Count of recently approved receipts with cashback items",
						"type": [
							"integer"
						]
					},
					"outcomeAmount": {
						"description": "Amount of user payouts",
						"type": [
							"number"
						]
					}
				}
			},
			"ApiCashbackPayoutForm": {
				"required": [
					"phone",
					"amount"
				],
				"properties": {
					"amount": {
						"description": "Payout amount. Err may be insufficient.",
						"type": [
							"integer"
						]
					},
					"phone": {
						"description": "Phone number, 10 digits without \"+7\"",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackReceipt": {
				"required": [
					"fullAmount",
					"text",
					"status",
					"statusText",
					"id",
					"displayId",
					"date",
					"amount"
				],
				"properties": {
					"amount": {
						"description": "Signed receipt cashback amount. May be zero.",
						"type": [
							"number"
						]
					},
					"date": {
						"description": "Receipt upload date",
						"type": [
							"string"
						]
					},
					"displayId": {
						"description": "This ID clients should display for user",
						"type": [
							"string"
						]
					},
					"fullAmount": {
						"description": "FullAmount full receipt amount",
						"type": [
							"number"
						]
					},
					"id": {
						"description": "Cashback receipt internal uteka ID",
						"type": [
							"integer"
						]
					},
					"status": {
						"description": "Possible values: waiting, processed, matched",
						"type": [
							"string"
						]
					},
					"statusText": {
						"description": "End user status representation. May be empty",
						"type": [
							"string"
						]
					},
					"text": {
						"description": "Description",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackReceiptForm": {
				"required": [
					"fp",
					"time",
					"sum",
					"fn",
					"i"
				],
				"properties": {
					"fn": {
						"description": "Заводской номер фискального накопителя (ФН). Ошибки: required, format",
						"type": [
							"string"
						]
					},
					"fp": {
						"description": "Фискальный признак данных ФП(Д) (FiscalSign). Ошибки: required, min, max",
						"type": [
							"integer"
						]
					},
					"i": {
						"description": "Номер фискальных данных ФД (FiscalDocumentId). Ошибки: required, min, max",
						"type": [
							"integer"
						]
					},
					"sum": {
						"description": "Сумма на чеке. Ошибки: required, incorrect",
						"type": [
							"string"
						]
					},
					"time": {
						"description": "Время покупки в формате DD.MM.YY mm:ss. Ошибки: format, required",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackReceiptItem": {
				"required": [
					"title",
					"count",
					"amount",
					"cashbackAmount"
				],
				"properties": {
					"amount": {
						"type": [
							"number"
						]
					},
					"cashbackAmount": {
						"type": [
							"number"
						]
					},
					"count": {
						"type": [
							"number"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackSearch": {
				"required": [],
				"properties": {
					"categoryId": {
						"type": [
							"integer"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"query": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackTooltip": {
				"required": [
					"alias",
					"title",
					"description"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"description": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackTransaction": {
				"required": [
					"text",
					"status",
					"statusText",
					"id",
					"date",
					"isIncome",
					"amount"
				],
				"properties": {
					"amount": {
						"description": "Signed transaction amount",
						"type": [
							"number"
						]
					},
					"date": {
						"description": "Transaction date",
						"type": [
							"string"
						]
					},
					"id": {
						"description": "Cashback transaction internal uteka ID",
						"type": [
							"integer"
						]
					},
					"isIncome": {
						"description": "Is income",
						"type": [
							"boolean"
						]
					},
					"status": {
						"description": "Possible values: paid, processing, error",
						"type": [
							"string"
						]
					},
					"statusText": {
						"description": "End user status representation. May be empty",
						"type": [
							"string"
						]
					},
					"text": {
						"description": "Description",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCashbackType": {
				"required": [
					"type",
					"value"
				],
				"properties": {
					"type": {
						"type": [
							"string"
						]
					},
					"value": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiCatalogueItem": {
				"required": [
					"tradeId",
					"category",
					"title",
					"alias",
					"diseases",
					"country",
					"isAvailable",
					"isAds",
					"count",
					"minPrice",
					"images",
					"imageInfos",
					"maxPrice",
					"producer",
					"mainDisease"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"cashbackType": {
						"$ref": "#/components/schemas/ApiCashbackType"
					},
					"category": {
						"$ref": "#/components/schemas/ApiCategory"
					},
					"count": {
						"type": [
							"integer"
						]
					},
					"country": {
						"type": [
							"string"
						]
					},
					"diseases": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"imageInfos": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiImageInfo"
							}
						],
						"type": [
							"array"
						]
					},
					"images": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"isAds": {
						"type": [
							"boolean"
						]
					},
					"isAvailable": {
						"type": [
							"boolean"
						]
					},
					"mainDisease": {
						"type": [
							"string"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"producer": {
						"type": [
							"string"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"tradeId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiCategory": {
				"required": [
					"title",
					"subCategories",
					"alias",
					"image",
					"imagePNG1x",
					"imagePNG3x",
					"imagePNG4x",
					"productsCount",
					"isPopular",
					"imagePNG2x",
					"categoryId",
					"nodes"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"categoryId": {
						"type": [
							"integer"
						]
					},
					"color": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"imagePNG1x": {
						"type": [
							"string"
						]
					},
					"imagePNG2x": {
						"type": [
							"string"
						]
					},
					"imagePNG3x": {
						"type": [
							"string"
						]
					},
					"imagePNG4x": {
						"type": [
							"string"
						]
					},
					"isPopular": {
						"type": [
							"boolean"
						]
					},
					"nodes": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCategory"
							}
						],
						"type": [
							"array"
						]
					},
					"parentAlias": {
						"type": [
							"string"
						]
					},
					"parentTitle": {
						"type": [
							"string"
						]
					},
					"productsCount": {
						"type": [
							"integer"
						]
					},
					"subCategories": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiSubCategory"
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCity": {
				"required": [
					"title",
					"longitude",
					"googleVerificationDesktop",
					"isTop",
					"timezone",
					"hasDelivery",
					"hasMetro",
					"phone",
					"pharmacyCount",
					"hasFolders",
					"alias",
					"prepositionalTitle",
					"genitiveTitle",
					"rectangle",
					"deliveryLabel",
					"hasDiscount",
					"cityId",
					"prepositionalTitleRegion",
					"latitude",
					"yandexVerification",
					"yandexVerificationDesktop",
					"googleVerification",
					"localPhone"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"deliveryLabel": {
						"type": [
							"string"
						]
					},
					"genitiveTitle": {
						"type": [
							"string"
						]
					},
					"googleVerification": {
						"type": [
							"string"
						]
					},
					"googleVerificationDesktop": {
						"type": [
							"string"
						]
					},
					"hasDelivery": {
						"type": [
							"boolean"
						]
					},
					"hasDiscount": {
						"type": [
							"boolean"
						]
					},
					"hasFolders": {
						"type": [
							"boolean"
						]
					},
					"hasMetro": {
						"type": [
							"boolean"
						]
					},
					"isTop": {
						"type": [
							"boolean"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"localPhone": {
						"type": [
							"string"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"phone": {
						"type": [
							"string"
						]
					},
					"prepositionalTitle": {
						"type": [
							"string"
						]
					},
					"prepositionalTitleRegion": {
						"type": [
							"string"
						]
					},
					"rectangle": {
						"type": [
							"string"
						]
					},
					"timezone": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"yandexVerification": {
						"type": [
							"string"
						]
					},
					"yandexVerificationDesktop": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiCourierInfo": {
				"required": [
					"city",
					"street",
					"entrance",
					"intercom",
					"courierTypeId",
					"number",
					"flat",
					"floor",
					"comment",
					"address"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"city": {
						"type": [
							"string"
						]
					},
					"comment": {
						"type": [
							"string"
						]
					},
					"courierTypeId": {
						"type": [
							"integer"
						]
					},
					"entrance": {
						"type": [
							"string"
						]
					},
					"flat": {
						"type": [
							"string"
						]
					},
					"floor": {
						"type": [
							"string"
						]
					},
					"intercom": {
						"type": [
							"string"
						]
					},
					"number": {
						"type": [
							"string"
						]
					},
					"street": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDeliveryAddress": {
				"required": [
					"entrance",
					"intercom",
					"city",
					"address",
					"street",
					"number",
					"flat",
					"floor",
					"comment"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"city": {
						"type": [
							"string"
						]
					},
					"comment": {
						"type": [
							"string"
						]
					},
					"entrance": {
						"type": [
							"string"
						]
					},
					"flat": {
						"type": [
							"string"
						]
					},
					"floor": {
						"type": [
							"string"
						]
					},
					"intercom": {
						"type": [
							"string"
						]
					},
					"number": {
						"type": [
							"string"
						]
					},
					"street": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDeliveryCart": {
				"required": [
					"deliveryOption",
					"items"
				],
				"properties": {
					"deliveryOption": {
						"$ref": "#/components/schemas/ApiDeliveryOption"
					},
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartItem"
							}
						],
						"type": [
							"array"
						]
					},
					"notice": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDeliveryCourier": {
				"required": [
					"deliveryPrice",
					"deliveryInterval",
					"priceTotal",
					"pharmacy",
					"courierTypeId",
					"title",
					"alias",
					"price"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"courierTypeId": {
						"type": [
							"integer"
						]
					},
					"deliveryInterval": {
						"type": [
							"string"
						]
					},
					"deliveryPrice": {
						"type": [
							"integer"
						]
					},
					"pharmacy": {
						"$ref": "#/components/schemas/ApiPharmacy"
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"priceTotal": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDeliveryCourierCart": {
				"required": [
					"deliveryCourier",
					"items"
				],
				"properties": {
					"deliveryCourier": {
						"$ref": "#/components/schemas/ApiDeliveryCourier"
					},
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartItem"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiDeliveryInfo": {
				"required": [
					"address",
					"entrance",
					"building",
					"floor",
					"comment",
					"city",
					"deliveryTypeId",
					"street",
					"intercom",
					"deliveryType",
					"number",
					"flat"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"building": {
						"type": [
							"string"
						]
					},
					"city": {
						"type": [
							"string"
						]
					},
					"comment": {
						"type": [
							"string"
						]
					},
					"deliveryType": {
						"$ref": "#/components/schemas/ApiDeliveryType"
					},
					"deliveryTypeId": {
						"type": [
							"integer"
						]
					},
					"entrance": {
						"type": [
							"string"
						]
					},
					"flat": {
						"type": [
							"string"
						]
					},
					"floor": {
						"type": [
							"string"
						]
					},
					"intercom": {
						"type": [
							"string"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"number": {
						"type": [
							"string"
						]
					},
					"street": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDeliveryListItem": {
				"required": [
					"provider",
					"price",
					"terms",
					"termsDetails",
					"termsLink",
					"deliveryTypes",
					"cities"
				],
				"properties": {
					"cities": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"deliveryTypes": {
						"$ref": "#/components/schemas/ApiDeliveryTypeList"
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"provider": {
						"$ref": "#/components/schemas/ApiProvider"
					},
					"terms": {
						"type": [
							"string"
						]
					},
					"termsDetails": {
						"type": [
							"string"
						]
					},
					"termsLink": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDeliveryOption": {
				"required": [
					"priceTotal",
					"deliveryTimeFrom",
					"provider",
					"deliveryTypeId",
					"deliveryPrice",
					"deliveryTimeTo",
					"terms",
					"termsLink",
					"paymentTypes",
					"title",
					"deliveryDate",
					"isInexactPrice",
					"deliveryDateText",
					"label",
					"price"
				],
				"properties": {
					"deliveryDate": {
						"type": [
							"string"
						]
					},
					"deliveryDateText": {
						"type": [
							"string"
						]
					},
					"deliveryPrice": {
						"type": [
							"integer"
						]
					},
					"deliveryTimeFrom": {
						"type": [
							"string"
						]
					},
					"deliveryTimeTo": {
						"type": [
							"string"
						]
					},
					"deliveryTypeId": {
						"type": [
							"integer"
						]
					},
					"isInexactPrice": {
						"type": [
							"boolean"
						]
					},
					"label": {
						"type": [
							"string"
						]
					},
					"paymentTypes": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPaymentType"
							}
						],
						"type": [
							"array"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"priceTotal": {
						"type": [
							"integer"
						]
					},
					"provider": {
						"$ref": "#/components/schemas/ApiProvider"
					},
					"terms": {
						"type": [
							"string"
						]
					},
					"termsLink": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDeliveryType": {
				"required": [
					"deliveryDateText",
					"deliveryTimeFrom",
					"deliveryTimeTo",
					"id",
					"title",
					"price",
					"deliveryDate"
				],
				"properties": {
					"deliveryDate": {
						"type": [
							"string"
						]
					},
					"deliveryDateText": {
						"type": [
							"string"
						]
					},
					"deliveryTimeFrom": {
						"type": [
							"string"
						]
					},
					"deliveryTimeTo": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDeliveryTypeList": {
				"required": [
					"city",
					"minPrice",
					"types"
				],
				"properties": {
					"city": {
						"type": [
							"string"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"types": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiDeliveryType"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiDiscountCard": {
				"required": [
					"id",
					"title",
					"code",
					"codeType"
				],
				"properties": {
					"code": {
						"type": [
							"string"
						]
					},
					"codeType": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"partner": {
						"$ref": "#/components/schemas/ApiPartnerSummary"
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDiscountCardForm": {
				"required": [
					"title",
					"code",
					"codeType"
				],
				"properties": {
					"code": {
						"type": [
							"string"
						]
					},
					"codeType": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiDiscountCounters": {
				"required": [
					"balance",
					"transactionsCount",
					"maxAmount",
					"minOrderAmount",
					"hasReferralOrders",
					"isPromocodeApplicable",
					"referralBonuses"
				],
				"properties": {
					"balance": {
						"type": [
							"number"
						]
					},
					"hasReferralOrders": {
						"type": [
							"boolean"
						]
					},
					"isPromocodeApplicable": {
						"type": [
							"boolean"
						]
					},
					"maxAmount": {
						"type": [
							"integer"
						]
					},
					"minOrderAmount": {
						"type": [
							"integer"
						]
					},
					"referralBonuses": {
						"type": [
							"integer"
						]
					},
					"transactionsCount": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiDiscountTransaction": {
				"required": [
					"date",
					"isIncome",
					"amount",
					"label",
					"isWaiting"
				],
				"properties": {
					"amount": {
						"type": [
							"number"
						]
					},
					"date": {
						"type": [
							"string"
						]
					},
					"isIncome": {
						"type": [
							"boolean"
						]
					},
					"isWaiting": {
						"type": [
							"boolean"
						]
					},
					"label": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiEntity": {
				"required": [
					"id",
					"title"
				],
				"properties": {
					"id": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiFAQCategory": {
				"required": [
					"id",
					"title",
					"alias",
					"items"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiFAQItem"
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiFAQItem": {
				"required": [
					"id",
					"title",
					"content",
					"image"
				],
				"properties": {
					"content": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiFeedback": {
				"required": [
					"email"
				],
				"properties": {
					"contact": {
						"type": [
							"string"
						]
					},
					"content": {
						"type": [
							"string"
						]
					},
					"email": {
						"type": [
							"string"
						]
					},
					"name": {
						"type": [
							"string"
						]
					},
					"organizationName": {
						"type": [
							"string"
						]
					},
					"organizationType": {
						"type": [
							"string"
						]
					},
					"pharmacies": {
						"type": [
							"string"
						]
					},
					"phone": {
						"type": [
							"string"
						]
					},
					"site": {
						"type": [
							"string"
						]
					},
					"subject": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiFullCashbackReceipt": {
				"required": [
					"amount",
					"text",
					"status",
					"statusText",
					"displayId",
					"date",
					"cashbackItemsCount",
					"items",
					"id",
					"cashbackAmount"
				],
				"properties": {
					"amount": {
						"description": "Signed receipt amount. May be zero.",
						"type": [
							"number"
						]
					},
					"cashbackAmount": {
						"description": "Amount of cashback.",
						"type": [
							"number"
						]
					},
					"cashbackItemsCount": {
						"description": "Count of cashback items, may be 0.",
						"type": [
							"integer"
						]
					},
					"date": {
						"description": "Receipt purchase date",
						"type": [
							"string"
						]
					},
					"displayId": {
						"description": "This ID clients should display for user",
						"type": [
							"string"
						]
					},
					"id": {
						"description": "Cashback receipt internal uteka ID",
						"type": [
							"integer"
						]
					},
					"items": {
						"description": "Receipt items",
						"items": [
							{
								"$ref": "#/components/schemas/ApiCashbackReceiptItem"
							}
						],
						"type": [
							"array"
						]
					},
					"status": {
						"description": "Possible values: waiting, processed, matched",
						"type": [
							"string"
						]
					},
					"statusText": {
						"description": "End user status representation. May be empty",
						"type": [
							"string"
						]
					},
					"text": {
						"description": "Description",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiGeoObject": {
				"required": [
					"pharmacyCount",
					"city",
					"geoObjectId",
					"title",
					"latitude",
					"longitude"
				],
				"properties": {
					"city": {
						"$ref": "#/components/schemas/ApiCity"
					},
					"geoObjectId": {
						"type": [
							"integer"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiGeoObjectAutocompleteItem": {
				"required": [
					"title",
					"parentTitle",
					"pharmacyCount"
				],
				"properties": {
					"city": {
						"$ref": "#/components/schemas/ApiCity"
					},
					"geoObjectId": {
						"type": [
							"integer"
						]
					},
					"parent": {
						"$ref": "#/components/schemas/ApiGeoObjectAutocompleteParentItem"
					},
					"parentTitle": {
						"type": [
							"string"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiGeoObjectAutocompleteParentItem": {
				"required": [
					"title",
					"parentTitle",
					"pharmacyCount"
				],
				"properties": {
					"city": {
						"$ref": "#/components/schemas/ApiCity"
					},
					"geoObjectId": {
						"type": [
							"integer"
						]
					},
					"parentTitle": {
						"type": [
							"string"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiImageInfo": {
				"required": [
					"url",
					"hash",
					"blurhash",
					"width",
					"height"
				],
				"properties": {
					"blurhash": {
						"type": [
							"string"
						]
					},
					"hash": {
						"type": [
							"string"
						]
					},
					"height": {
						"type": [
							"integer"
						]
					},
					"url": {
						"type": [
							"string"
						]
					},
					"width": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiInstruction": {
				"required": [
					"DRUGFORMDESCR",
					"PHARMADYNAMIC",
					"PHARMAKINETIC",
					"USEMETHODANDDOSES",
					"INFLUENCEONVEHICLES",
					"PHARMAGROUP",
					"REGISTRATIONHOLDER",
					"CHARACTERS",
					"COMMENT",
					"COMPOSITION",
					"CHILDREN",
					"MANUFACTURER",
					"PHARMAACTIONS",
					"CONSUMERCLAIMS",
					"INSTRFORPAC",
					"INTERACTIONS",
					"CLINICALPHARMACOLOGY",
					"ACTONORG",
					"COMPONENTSPROPERTIES",
					"DIRECTION",
					"CONTRAINDICATIONS",
					"CAREFULLY",
					"PREGNANCYUSE",
					"EXPIRATION",
					"STORAGECONDITIONS",
					"RECOMMENDATIONS",
					"OVERDOSE",
					"SPECIALGUIDELINES",
					"FORM",
					"APTEKA_CONDITION",
					"LITERATURE",
					"INDICATIONS",
					"SIDEACTIONS",
					"PRECAUTIONS",
					"PHARMAPROPERTIES"
				],
				"properties": {
					"ACTONORG": {
						"type": [
							"string"
						]
					},
					"APTEKA_CONDITION": {
						"type": [
							"string"
						]
					},
					"CAREFULLY": {
						"type": [
							"string"
						]
					},
					"CHARACTERS": {
						"type": [
							"string"
						]
					},
					"CHILDREN": {
						"type": [
							"string"
						]
					},
					"CLINICALPHARMACOLOGY": {
						"type": [
							"string"
						]
					},
					"COMMENT": {
						"type": [
							"string"
						]
					},
					"COMPONENTSPROPERTIES": {
						"type": [
							"string"
						]
					},
					"COMPOSITION": {
						"type": [
							"string"
						]
					},
					"CONSUMERCLAIMS": {
						"type": [
							"string"
						]
					},
					"CONTRAINDICATIONS": {
						"type": [
							"string"
						]
					},
					"DIRECTION": {
						"type": [
							"string"
						]
					},
					"DRUGFORMDESCR": {
						"type": [
							"string"
						]
					},
					"EXPIRATION": {
						"type": [
							"string"
						]
					},
					"FORM": {
						"type": [
							"string"
						]
					},
					"INDICATIONS": {
						"type": [
							"string"
						]
					},
					"INFLUENCEONVEHICLES": {
						"type": [
							"string"
						]
					},
					"INSTRFORPAC": {
						"type": [
							"string"
						]
					},
					"INTERACTIONS": {
						"type": [
							"string"
						]
					},
					"LITERATURE": {
						"type": [
							"string"
						]
					},
					"MANUFACTURER": {
						"type": [
							"string"
						]
					},
					"OVERDOSE": {
						"type": [
							"string"
						]
					},
					"PHARMAACTIONS": {
						"type": [
							"string"
						]
					},
					"PHARMADYNAMIC": {
						"type": [
							"string"
						]
					},
					"PHARMAGROUP": {
						"type": [
							"string"
						]
					},
					"PHARMAKINETIC": {
						"type": [
							"string"
						]
					},
					"PHARMAPROPERTIES": {
						"type": [
							"string"
						]
					},
					"PRECAUTIONS": {
						"type": [
							"string"
						]
					},
					"PREGNANCYUSE": {
						"type": [
							"string"
						]
					},
					"RECOMMENDATIONS": {
						"type": [
							"string"
						]
					},
					"REGISTRATIONHOLDER": {
						"type": [
							"string"
						]
					},
					"SIDEACTIONS": {
						"type": [
							"string"
						]
					},
					"SPECIALGUIDELINES": {
						"type": [
							"string"
						]
					},
					"STORAGECONDITIONS": {
						"type": [
							"string"
						]
					},
					"USEMETHODANDDOSES": {
						"type": [
							"string"
						]
					},
					"desc_id": {
						"type": [
							"string"
						]
					},
					"desc_name": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiInstructionField": {
				"required": [
					"key",
					"value"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"key": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					},
					"value": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiInstructionFields": {
				"required": [
					"order",
					"results"
				],
				"properties": {
					"order": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"results": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiInstructionField"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiKit": {
				"required": [
					"image",
					"id",
					"title",
					"imageBig",
					"url",
					"urlShare",
					"minPrice",
					"blocks",
					"imageMedium",
					"imageDesktop",
					"maxPrice",
					"products",
					"isAvailable"
				],
				"properties": {
					"blocks": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiKitBlock"
							}
						],
						"type": [
							"array"
						]
					},
					"category": {
						"$ref": "#/components/schemas/ApiCategory"
					},
					"content": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"imageBig": {
						"type": [
							"string"
						]
					},
					"imageDesktop": {
						"type": [
							"string"
						]
					},
					"imageMedium": {
						"type": [
							"string"
						]
					},
					"isAvailable": {
						"type": [
							"boolean"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"products": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductSummary"
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					},
					"urlShare": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiKitBlock": {
				"required": [
					"title",
					"description",
					"productIds"
				],
				"properties": {
					"description": {
						"type": [
							"string"
						]
					},
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiKitSummary": {
				"required": [
					"url",
					"id",
					"title",
					"image",
					"imageHash",
					"icon"
				],
				"properties": {
					"icon": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"imageHash": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiLastStatus": {
				"required": [
					"lastCartUpdate",
					"lastOrderUpdate"
				],
				"properties": {
					"lastCartUpdate": {
						"type": [
							"integer"
						]
					},
					"lastOrderUpdate": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiLegalEntity": {
				"required": [
					"address",
					"title",
					"inn",
					"kpp"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"fileExt": {
						"type": [
							"string"
						]
					},
					"fileName": {
						"type": [
							"string"
						]
					},
					"fileSize": {
						"type": [
							"integer"
						]
					},
					"fileUrl": {
						"type": [
							"string"
						]
					},
					"inn": {
						"type": [
							"string"
						]
					},
					"kpp": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiLegalPartner": {
				"required": [
					"title",
					"url",
					"rulesUrl",
					"image"
				],
				"properties": {
					"image": {
						"type": [
							"string"
						]
					},
					"rulesUrl": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiLoginByJWTResponse": {
				"required": [
					"apiKey",
					"state"
				],
				"properties": {
					"apiKey": {
						"type": [
							"string"
						]
					},
					"state": {
						"description": "exists, new, linked",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiMainBrand": {
				"required": [
					"url",
					"imageHash",
					"campaign",
					"productIds",
					"title"
				],
				"properties": {
					"campaign": {
						"type": [
							"string"
						]
					},
					"imageHash": {
						"type": [
							"string"
						]
					},
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiMainPageGroup": {
				"required": [
					"sorting",
					"items",
					"title"
				],
				"properties": {
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMainPageProduct"
							}
						],
						"type": [
							"array"
						]
					},
					"sorting": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiMainPageProduct": {
				"required": [
					"minPrice",
					"maxPrice",
					"image",
					"productId",
					"title",
					"alias",
					"price",
					"sorting",
					"showingType"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"showingType": {
						"type": [
							"integer"
						]
					},
					"sorting": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiMainPartner": {
				"required": [
					"title",
					"url",
					"imageHash",
					"campaign",
					"productIds"
				],
				"properties": {
					"campaign": {
						"type": [
							"string"
						]
					},
					"imageHash": {
						"type": [
							"string"
						]
					},
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiMapArea": {
				"required": [
					"latitude",
					"longitude",
					"zoomLevel",
					"cityId"
				],
				"properties": {
					"cityId": {
						"type": [
							"integer"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"zoomLevel": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapByListItem": {
				"required": [
					"active",
					"isPartial",
					"id",
					"distance",
					"minPrice",
					"extendedPickupId",
					"hasDiscountPrice",
					"cart",
					"price",
					"priceAlt",
					"isMissing",
					"deliveryType",
					"pickupText",
					"hasDiscountCard"
				],
				"properties": {
					"active": {
						"type": [
							"boolean"
						]
					},
					"cart": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapCartItem"
							}
						],
						"type": [
							"array"
						]
					},
					"deliveryType": {
						"type": [
							"string"
						]
					},
					"distance": {
						"type": [
							"integer"
						]
					},
					"extendedPickupId": {
						"type": [
							"integer"
						]
					},
					"hasDiscountCard": {
						"type": [
							"boolean"
						]
					},
					"hasDiscountPrice": {
						"type": [
							"boolean"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"isMissing": {
						"type": [
							"boolean"
						]
					},
					"isPartial": {
						"type": [
							"boolean"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"pickupText": {
						"type": [
							"string"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"priceAlt": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapCartItem": {
				"required": [
					"productId",
					"count",
					"price",
					"priceAlt",
					"isLowQuantity",
					"expirationDate"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"expirationDate": {
						"type": [
							"string"
						]
					},
					"isLowQuantity": {
						"type": [
							"boolean"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"priceAlt": {
						"type": [
							"integer"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapClusterMarker": {
				"required": [
					"id",
					"count",
					"lat",
					"lon",
					"distance",
					"imageUrl"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"distance": {
						"type": [
							"integer"
						]
					},
					"id": {
						"type": [
							"string"
						]
					},
					"imageUrl": {
						"type": [
							"string"
						]
					},
					"lat": {
						"type": [
							"number"
						]
					},
					"lon": {
						"type": [
							"number"
						]
					}
				}
			},
			"ApiMapClusterResponse": {
				"required": [
					"pharmacyLists",
					"view",
					"count",
					"map",
					"pharmacies",
					"extendedPickups",
					"partners",
					"statistics"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"extendedPickups": {
						"$ref": "#/components/schemas/ApiMapExtendedPickupPrice"
					},
					"filters": {
						"$ref": "#/components/schemas/ApiMapFilters"
					},
					"map": {
						"$ref": "#/components/schemas/ApiMapClusterResponseMap"
					},
					"partners": {
						"$ref": "#/components/schemas/ApiMapPartner"
					},
					"pharmacies": {
						"$ref": "#/components/schemas/ApiPharmacy"
					},
					"pharmacyLists": {
						"$ref": "#/components/schemas/ApiMapClusterResponsePharmacyLists"
					},
					"statistics": {
						"$ref": "#/components/schemas/ApiMapStatistics"
					},
					"view": {
						"$ref": "#/components/schemas/ApiMapView"
					}
				}
			},
			"ApiMapClusterResponseMap": {
				"required": [
					"items",
					"clusters"
				],
				"properties": {
					"clusters": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapClusterMarker"
							}
						],
						"type": [
							"array"
						]
					},
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapPharmacyMarker"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiMapClusterResponsePharmacyLists": {
				"required": [
					"byDistance",
					"byMinPrice"
				],
				"properties": {
					"byDistance": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapByListItem"
							}
						],
						"type": [
							"array"
						]
					},
					"byMinPrice": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapByListItem"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiMapExtendedPickupPrice": {
				"required": [
					"pickupDateText",
					"minPrice",
					"price",
					"network",
					"hasDiscountPrice",
					"isPartial",
					"cart",
					"pickupDate",
					"active"
				],
				"properties": {
					"active": {
						"type": [
							"boolean"
						]
					},
					"cart": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapCartItem"
							}
						],
						"type": [
							"array"
						]
					},
					"hasDiscountPrice": {
						"type": [
							"boolean"
						]
					},
					"isPartial": {
						"type": [
							"boolean"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"network": {
						"$ref": "#/components/schemas/ApiPharmacyNetwork"
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"pickupDate": {
						"type": [
							"string"
						]
					},
					"pickupDateText": {
						"type": [
							"string"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapExtendedPickupPriceSummary": {
				"required": [
					"id",
					"pickupText"
				],
				"properties": {
					"id": {
						"type": [
							"integer"
						]
					},
					"pickupText": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiMapFilters": {
				"required": [
					"pickup1hOnly",
					"extendedPickupOnly",
					"fullCartOnly",
					"inViewOnly",
					"pickupOnly",
					"pickupTomorrowOnly",
					"discountPriceOnly"
				],
				"properties": {
					"discountPriceOnly": {
						"type": [
							"boolean"
						]
					},
					"extendedPickupOnly": {
						"type": [
							"boolean"
						]
					},
					"fullCartOnly": {
						"type": [
							"boolean"
						]
					},
					"inViewOnly": {
						"type": [
							"boolean"
						]
					},
					"isOpen": {
						"type": [
							"boolean"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"pickup1hOnly": {
						"type": [
							"boolean"
						]
					},
					"pickupOnly": {
						"type": [
							"boolean"
						]
					},
					"pickupTomorrowOnly": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiMapPartner": {
				"required": [
					"partnerId",
					"title",
					"alias",
					"icon"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"icon": {
						"type": [
							"string"
						]
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiMapPharmaciesResponse": {
				"required": [
					"total",
					"totalDistinct",
					"byMinPrice",
					"byDistance",
					"pharmacies",
					"partners",
					"statistics"
				],
				"properties": {
					"byDistance": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapByListItem"
							}
						],
						"type": [
							"array"
						]
					},
					"byMinPrice": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapByListItem"
							}
						],
						"type": [
							"array"
						]
					},
					"partners": {
						"$ref": "#/components/schemas/ApiMapPartner"
					},
					"pharmacies": {
						"$ref": "#/components/schemas/ApiMapPharmacyPrice"
					},
					"statistics": {
						"$ref": "#/components/schemas/ApiMapStatistics"
					},
					"total": {
						"type": [
							"integer"
						]
					},
					"totalDistinct": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapPharmacyMarker": {
				"required": [
					"pharmacyId",
					"cart",
					"lon",
					"priceAlt",
					"imageUrl",
					"pinData",
					"pinLogoUrl",
					"pickupText",
					"lat",
					"active",
					"image",
					"hasDiscountCard",
					"isPartial",
					"price",
					"minPrice",
					"extendedPickupIds",
					"extendedPickups",
					"hasDiscountPrice",
					"id",
					"distance"
				],
				"properties": {
					"active": {
						"type": [
							"boolean"
						]
					},
					"cart": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapCartItem"
							}
						],
						"type": [
							"array"
						]
					},
					"distance": {
						"type": [
							"integer"
						]
					},
					"extendedPickupId": {
						"type": [
							"integer"
						]
					},
					"extendedPickupIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"extendedPickups": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapExtendedPickupPriceSummary"
							}
						],
						"type": [
							"array"
						]
					},
					"hasDiscountCard": {
						"type": [
							"boolean"
						]
					},
					"hasDiscountPrice": {
						"type": [
							"boolean"
						]
					},
					"id": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"imageUrl": {
						"type": [
							"string"
						]
					},
					"isPartial": {
						"type": [
							"boolean"
						]
					},
					"lat": {
						"type": [
							"number"
						]
					},
					"lon": {
						"type": [
							"number"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"pharmacyId": {
						"type": [
							"integer"
						]
					},
					"pickupText": {
						"type": [
							"string"
						]
					},
					"pinData": {
						"$ref": "#/components/schemas/ApiMapPinData"
					},
					"pinLogoUrl": {
						"description": "deprecated",
						"type": [
							"string"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"priceAlt": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapPharmacyPrice": {
				"required": [
					"isPartial",
					"cart",
					"priceAlt",
					"extendedPickup",
					"minPrice",
					"hasDiscountPrice",
					"price",
					"extendedPickups",
					"pharmacy",
					"active"
				],
				"properties": {
					"active": {
						"type": [
							"boolean"
						]
					},
					"cart": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapCartItem"
							}
						],
						"type": [
							"array"
						]
					},
					"extendedPickup": {
						"$ref": "#/components/schemas/ApiMapExtendedPickupPrice",
						"description": "deprecated"
					},
					"extendedPickups": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiMapExtendedPickupPrice"
							}
						],
						"type": [
							"array"
						]
					},
					"hasDiscountPrice": {
						"type": [
							"boolean"
						]
					},
					"isPartial": {
						"type": [
							"boolean"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"pharmacy": {
						"$ref": "#/components/schemas/ApiPharmacy"
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"priceAlt": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapPinData": {
				"required": [
					"isPartial",
					"price",
					"logoUrl",
					"inStockCount",
					"totalCount"
				],
				"properties": {
					"inStockCount": {
						"type": [
							"integer"
						]
					},
					"isPartial": {
						"type": [
							"boolean"
						]
					},
					"logoUrl": {
						"type": [
							"string"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"totalCount": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapPostal": {
				"required": [
					"city",
					"latitude",
					"longitude",
					"zoomLevel",
					"rectangle"
				],
				"properties": {
					"city": {
						"$ref": "#/components/schemas/ApiCity"
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"rectangle": {
						"type": [
							"string"
						]
					},
					"zoomLevel": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMapSearch": {
				"required": [
					"multiPickup",
					"withPartial",
					"cityId",
					"cart",
					"deliveryType"
				],
				"properties": {
					"cart": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartRequestItem"
							}
						],
						"type": [
							"array"
						]
					},
					"cartId": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"deliveryType": {
						"type": [
							"integer"
						]
					},
					"multiPickup": {
						"type": [
							"boolean"
						]
					},
					"withPartial": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiMapStatistics": {
				"required": [
					"showExpress1hButton",
					"countInView",
					"hasPickup",
					"showExpressButton",
					"showFullCartButton",
					"minPrice",
					"maxPrice",
					"count",
					"pharmacyCount",
					"hasPickupFiltered",
					"showDiscountPriceButton"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"countInView": {
						"type": [
							"integer"
						]
					},
					"hasPickup": {
						"type": [
							"boolean"
						]
					},
					"hasPickupFiltered": {
						"type": [
							"boolean"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"showDiscountPriceButton": {
						"type": [
							"boolean"
						]
					},
					"showExpress1hButton": {
						"type": [
							"boolean"
						]
					},
					"showExpressButton": {
						"type": [
							"boolean"
						]
					},
					"showFullCartButton": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiMapView": {
				"required": [
					"swLat",
					"myLat",
					"myLon",
					"neLat",
					"neLon",
					"swLon",
					"zoomLevel",
					"outsideBox"
				],
				"properties": {
					"myLat": {
						"type": [
							"number"
						]
					},
					"myLon": {
						"type": [
							"number"
						]
					},
					"neLat": {
						"type": [
							"number"
						]
					},
					"neLon": {
						"type": [
							"number"
						]
					},
					"outsideBox": {
						"type": [
							"integer"
						]
					},
					"pharmacyId": {
						"type": [
							"integer"
						]
					},
					"swLat": {
						"type": [
							"number"
						]
					},
					"swLon": {
						"type": [
							"number"
						]
					},
					"zoomLevel": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiMetaDetail": {
				"required": [
					"objectClass",
					"subCategories",
					"breadcrumbs",
					"pageTitle",
					"seoTradeReviews",
					"seoInstructions",
					"tradeActiveSubstances",
					"pageHeader",
					"openGraph",
					"tradeLinks"
				],
				"properties": {
					"alt": {
						"type": [
							"string"
						]
					},
					"breadcrumbs": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"category": {
						"$ref": "#/components/schemas/ApiCategory"
					},
					"metaDescription": {
						"type": [
							"string"
						]
					},
					"metaKeywords": {
						"type": [
							"string"
						]
					},
					"objectClass": {
						"type": [
							"string"
						]
					},
					"objectId": {
						"type": [
							"integer"
						]
					},
					"objectTitle": {
						"type": [
							"string"
						]
					},
					"objectType": {
						"type": [
							"string"
						]
					},
					"openGraph": {
						"$ref": "#/components/schemas/ApiOpenGraph"
					},
					"pageHeader": {
						"type": [
							"string"
						]
					},
					"pageTitle": {
						"type": [
							"string"
						]
					},
					"product": {
						"$ref": "#/components/schemas/ApiProduct"
					},
					"productSearch": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"propertyValue": {
						"$ref": "#/components/schemas/ApiPropertyValue"
					},
					"robots": {
						"type": [
							"string"
						]
					},
					"seoBlock": {
						"$ref": "#/components/schemas/ApiSEOBlock"
					},
					"seoBlockFAQ": {
						"$ref": "#/components/schemas/ApiSEOBlock"
					},
					"seoCities": {
						"$ref": "#/components/schemas/ApiSEOBlock"
					},
					"seoInstructions": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiSEOInstruction"
							}
						],
						"type": [
							"array"
						]
					},
					"seoTradeContent": {
						"$ref": "#/components/schemas/ApiSEOTradeContent"
					},
					"seoTradeReviews": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductReview"
							}
						],
						"type": [
							"array"
						]
					},
					"seoTradeReviewsAvg": {
						"type": [
							"number"
						]
					},
					"seoTradeReviewsCount": {
						"type": [
							"integer"
						]
					},
					"subCategories": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"tradeActiveSubstances": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"tradeAnalogsCount": {
						"type": [
							"integer"
						]
					},
					"tradeAnalogsSearch": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"tradeLinks": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiTradeLink"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiOfficeBranch": {
				"required": [
					"cityId",
					"latitude",
					"longitude",
					"cityTitle",
					"address",
					"postalCode",
					"mapUrl"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"cityTitle": {
						"type": [
							"string"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"mapUrl": {
						"type": [
							"string"
						]
					},
					"postalCode": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiOpenGraph": {
				"required": [
					"site",
					"title",
					"description",
					"type",
					"image",
					"url"
				],
				"properties": {
					"description": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"site": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"type": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiOrder": {
				"required": [
					"products",
					"reservationEndsAt",
					"createdAt",
					"orderId",
					"reservationEndsAtText",
					"displayOrderId",
					"pharmacy",
					"city",
					"profile",
					"amountTotal",
					"type",
					"discount",
					"status",
					"amount"
				],
				"properties": {
					"amount": {
						"type": [
							"number"
						]
					},
					"amountTotal": {
						"type": [
							"number"
						]
					},
					"assemblyStatus": {
						"$ref": "#/components/schemas/ApiOrderAssemblyStatus"
					},
					"city": {
						"$ref": "#/components/schemas/ApiCity"
					},
					"courierInfo": {
						"$ref": "#/components/schemas/ApiOrderCourierInfo"
					},
					"createdAt": {
						"type": [
							"string"
						]
					},
					"deliveryAt": {
						"type": [
							"string"
						]
					},
					"deliveryAtText": {
						"type": [
							"string"
						]
					},
					"deliveryInfo": {
						"$ref": "#/components/schemas/ApiDeliveryInfo"
					},
					"deliveryProvider": {
						"$ref": "#/components/schemas/ApiPharmacyNetwork"
					},
					"discount": {
						"type": [
							"integer"
						]
					},
					"discountCard": {
						"$ref": "#/components/schemas/ApiDiscountCard"
					},
					"displayOrderId": {
						"type": [
							"string"
						]
					},
					"economy": {
						"$ref": "#/components/schemas/ApiOrderEconomy"
					},
					"extendedPickup": {
						"$ref": "#/components/schemas/ApiPharmacyNetwork"
					},
					"loyaltyProgram": {
						"$ref": "#/components/schemas/ApiOrderLoyaltyProgram"
					},
					"notice": {
						"type": [
							"string"
						]
					},
					"orderId": {
						"type": [
							"integer"
						]
					},
					"partner": {
						"$ref": "#/components/schemas/ApiPartnerSummary"
					},
					"paymentInfo": {
						"$ref": "#/components/schemas/ApiOrderPaymentInfo"
					},
					"pharmacy": {
						"$ref": "#/components/schemas/ApiPharmacy"
					},
					"products": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductOrder"
							}
						],
						"type": [
							"array"
						]
					},
					"profile": {
						"$ref": "#/components/schemas/ApiProfile"
					},
					"reservationEndsAt": {
						"type": [
							"string"
						]
					},
					"reservationEndsAtText": {
						"type": [
							"string"
						]
					},
					"status": {
						"$ref": "#/components/schemas/ApiStatusOrder"
					},
					"type": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiOrderAssemblyStatus": {
				"required": [
					"isToday",
					"label",
					"status",
					"labelRelative",
					"endsAtRelativeText",
					"endsAtText",
					"isExpired",
					"percent",
					"labelExpired"
				],
				"properties": {
					"endsAtRelativeText": {
						"type": [
							"string"
						]
					},
					"endsAtText": {
						"type": [
							"string"
						]
					},
					"isExpired": {
						"type": [
							"boolean"
						]
					},
					"isToday": {
						"type": [
							"boolean"
						]
					},
					"label": {
						"description": "deprecated",
						"type": [
							"string"
						]
					},
					"labelExpired": {
						"type": [
							"string"
						]
					},
					"labelRelative": {
						"description": "deprecated",
						"type": [
							"string"
						]
					},
					"percent": {
						"type": [
							"integer"
						]
					},
					"status": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiOrderCounters": {
				"required": [
					"active",
					"ready",
					"completed",
					"finished",
					"economy"
				],
				"properties": {
					"active": {
						"type": [
							"integer"
						]
					},
					"completed": {
						"type": [
							"integer"
						]
					},
					"economy": {
						"type": [
							"integer"
						]
					},
					"finished": {
						"type": [
							"integer"
						]
					},
					"ready": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiOrderCourierInfo": {
				"required": [
					"deliveryPrice",
					"deliveryIntervalFrom",
					"deliveryIntervalTo",
					"address"
				],
				"properties": {
					"address": {
						"$ref": "#/components/schemas/ApiDeliveryAddress"
					},
					"deliveryIntervalFrom": {
						"type": [
							"string"
						]
					},
					"deliveryIntervalTo": {
						"type": [
							"string"
						]
					},
					"deliveryPrice": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiOrderEconomy": {
				"required": [
					"title",
					"value"
				],
				"properties": {
					"title": {
						"type": [
							"string"
						]
					},
					"value": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiOrderLoyaltyProgram": {
				"required": [
					"price",
					"partner"
				],
				"properties": {
					"partner": {
						"$ref": "#/components/schemas/ApiPartnerSummary"
					},
					"price": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiOrderPaymentInfo": {
				"required": [
					"isPaid",
					"paymentType",
					"paymentDeadlineAt"
				],
				"properties": {
					"isPaid": {
						"type": [
							"boolean"
						]
					},
					"paymentDeadlineAt": {
						"type": [
							"string"
						]
					},
					"paymentType": {
						"type": [
							"string"
						]
					},
					"paymentUrl": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiOrderSearch": {
				"required": [],
				"properties": {
					"isActive": {
						"type": [
							"boolean"
						]
					},
					"isCancelled": {
						"type": [
							"boolean"
						]
					},
					"isCompleted": {
						"type": [
							"boolean"
						]
					},
					"isFinished": {
						"type": [
							"boolean"
						]
					},
					"sorting": {
						"type": [
							"string"
						]
					},
					"sortingIsAsc": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiOrderShare": {
				"required": [
					"url"
				],
				"properties": {
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiOrderStatus": {
				"required": [
					"statusId",
					"nameSystem",
					"namePickup",
					"nameExtendedPickup",
					"nameDelivery",
					"colorHex"
				],
				"properties": {
					"colorHex": {
						"type": [
							"string"
						]
					},
					"nameDelivery": {
						"type": [
							"string"
						]
					},
					"nameExtendedPickup": {
						"type": [
							"string"
						]
					},
					"namePickup": {
						"type": [
							"string"
						]
					},
					"nameSystem": {
						"type": [
							"string"
						]
					},
					"statusId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiOrderSummary": {
				"required": [
					"discount",
					"pharmacy",
					"profile",
					"status",
					"displayOrderId",
					"amount",
					"amountTotal",
					"products",
					"reservationEndsAt",
					"type",
					"orderId",
					"reservationEndsAtText",
					"city",
					"createdAt"
				],
				"properties": {
					"amount": {
						"type": [
							"number"
						]
					},
					"amountTotal": {
						"type": [
							"number"
						]
					},
					"assemblyStatus": {
						"$ref": "#/components/schemas/ApiOrderAssemblyStatus"
					},
					"city": {
						"$ref": "#/components/schemas/ApiCity"
					},
					"courierInfo": {
						"$ref": "#/components/schemas/ApiOrderCourierInfo"
					},
					"createdAt": {
						"type": [
							"string"
						]
					},
					"deliveryAt": {
						"type": [
							"string"
						]
					},
					"deliveryAtText": {
						"type": [
							"string"
						]
					},
					"deliveryInfo": {
						"$ref": "#/components/schemas/ApiDeliveryInfo"
					},
					"deliveryProvider": {
						"$ref": "#/components/schemas/ApiPharmacyNetwork"
					},
					"discount": {
						"type": [
							"integer"
						]
					},
					"discountCard": {
						"$ref": "#/components/schemas/ApiDiscountCard"
					},
					"displayOrderId": {
						"type": [
							"string"
						]
					},
					"economy": {
						"$ref": "#/components/schemas/ApiOrderEconomy"
					},
					"extendedPickup": {
						"$ref": "#/components/schemas/ApiPharmacyNetwork"
					},
					"loyaltyProgram": {
						"$ref": "#/components/schemas/ApiOrderLoyaltyProgram"
					},
					"orderId": {
						"type": [
							"integer"
						]
					},
					"partner": {
						"$ref": "#/components/schemas/ApiPartnerSummary"
					},
					"paymentInfo": {
						"$ref": "#/components/schemas/ApiOrderPaymentInfo"
					},
					"pharmacy": {
						"$ref": "#/components/schemas/ApiPharmacy"
					},
					"products": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductOrder"
							}
						],
						"type": [
							"array"
						]
					},
					"profile": {
						"$ref": "#/components/schemas/ApiProfile"
					},
					"reservationEndsAt": {
						"type": [
							"string"
						]
					},
					"reservationEndsAtText": {
						"type": [
							"string"
						]
					},
					"status": {
						"$ref": "#/components/schemas/ApiStatusOrder"
					},
					"type": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPartner": {
				"required": [
					"rules",
					"partnerId",
					"color",
					"phone",
					"description",
					"loyaltyRules",
					"title",
					"distanceTradingLinks",
					"legalAddress",
					"inn",
					"distanceTradingRules",
					"squareImage",
					"pharmacyCount",
					"legalNameShort",
					"legalName",
					"ogrn",
					"alias",
					"image",
					"rulesUrl",
					"siteUrl"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"color": {
						"type": [
							"string"
						]
					},
					"description": {
						"type": [
							"string"
						]
					},
					"distanceTradingLinks": {
						"description": "deprecated",
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"distanceTradingRules": {
						"type": [
							"string"
						]
					},
					"fileExt": {
						"type": [
							"string"
						]
					},
					"fileName": {
						"type": [
							"string"
						]
					},
					"fileSize": {
						"type": [
							"integer"
						]
					},
					"fileUrl": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"inn": {
						"type": [
							"string"
						]
					},
					"legalAddress": {
						"type": [
							"string"
						]
					},
					"legalName": {
						"type": [
							"string"
						]
					},
					"legalNameShort": {
						"type": [
							"string"
						]
					},
					"loyaltyRules": {
						"type": [
							"string"
						]
					},
					"ogrn": {
						"type": [
							"string"
						]
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"phone": {
						"type": [
							"string"
						]
					},
					"rules": {
						"type": [
							"string"
						]
					},
					"rulesUrl": {
						"type": [
							"string"
						]
					},
					"siteUrl": {
						"type": [
							"string"
						]
					},
					"squareImage": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPartnerLoyaltyProgramRules": {
				"required": [
					"list",
					"partner"
				],
				"properties": {
					"list": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"partner": {
						"$ref": "#/components/schemas/ApiPartnerSummary"
					}
				}
			},
			"ApiPartnerSummary": {
				"required": [
					"title",
					"rulesUrl",
					"distanceTradingLinks",
					"partnerId",
					"alias",
					"image",
					"squareImage",
					"pharmacyCount",
					"color"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"color": {
						"type": [
							"string"
						]
					},
					"distanceTradingLinks": {
						"description": "deprecated",
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"rulesUrl": {
						"type": [
							"string"
						]
					},
					"squareImage": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPaymentInfo": {
				"required": [
					"paymentType"
				],
				"properties": {
					"paymentType": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPaymentType": {
				"required": [
					"title",
					"alias",
					"isPaymentRequired"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"isPaymentRequired": {
						"type": [
							"boolean"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPharmacy": {
				"required": [
					"hasPickupToday",
					"alias",
					"address",
					"latitude",
					"confirmationText",
					"orderConfirmationTime",
					"openCloseText",
					"phone",
					"phoneExtended",
					"workingHoursText",
					"orderNumber",
					"pharmacyNetworkId",
					"hasDiscount",
					"outOfTurn",
					"fullPickupText",
					"isOpen",
					"cashOnly",
					"hasExtendedPickup",
					"id",
					"longitude",
					"isFavorite",
					"city",
					"image",
					"network",
					"title",
					"is24hour",
					"pickupText",
					"timezone"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"alias": {
						"type": [
							"string"
						]
					},
					"cashOnly": {
						"type": [
							"boolean"
						]
					},
					"city": {
						"type": [
							"string"
						]
					},
					"confirmationText": {
						"description": "deprecated",
						"type": [
							"string"
						]
					},
					"fullPickupText": {
						"type": [
							"string"
						]
					},
					"hasDiscount": {
						"type": [
							"boolean"
						]
					},
					"hasExtendedPickup": {
						"type": [
							"boolean"
						]
					},
					"hasPickupToday": {
						"type": [
							"boolean"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"is24hour": {
						"type": [
							"boolean"
						]
					},
					"isFavorite": {
						"type": [
							"boolean"
						]
					},
					"isOpen": {
						"type": [
							"boolean"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"metroStation": {
						"$ref": "#/components/schemas/ApiStation"
					},
					"metroStationId": {
						"type": [
							"integer"
						]
					},
					"network": {
						"type": [
							"string"
						]
					},
					"openCloseText": {
						"type": [
							"string"
						]
					},
					"orderConfirmationTime": {
						"type": [
							"integer"
						]
					},
					"orderNumber": {
						"description": "deprecated",
						"type": [
							"integer"
						]
					},
					"outOfTurn": {
						"description": "deprecated",
						"type": [
							"boolean"
						]
					},
					"pharmacyNetworkId": {
						"type": [
							"integer"
						]
					},
					"phone": {
						"type": [
							"string"
						]
					},
					"phoneExtended": {
						"type": [
							"string"
						]
					},
					"pickupText": {
						"type": [
							"string"
						]
					},
					"timezone": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"workingHours": {
						"description": "deprecated",
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"workingHoursText": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPharmacyCard": {
				"required": [
					"pharmacyNetworkId",
					"title",
					"outOfTurn",
					"pickupText",
					"fullPickupText",
					"isOpen",
					"workingHoursText",
					"is24hour",
					"timezone",
					"cashOnly",
					"phoneExtended",
					"city",
					"image",
					"openCloseText",
					"orderConfirmationTime",
					"phone",
					"id",
					"nearestPharmacies",
					"alias",
					"address",
					"isFavorite",
					"hasDiscount",
					"hasPickupToday",
					"network",
					"latitude",
					"longitude",
					"orderNumber",
					"confirmationText",
					"hasExtendedPickup"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"alias": {
						"type": [
							"string"
						]
					},
					"cashOnly": {
						"type": [
							"boolean"
						]
					},
					"city": {
						"type": [
							"string"
						]
					},
					"confirmationText": {
						"description": "deprecated",
						"type": [
							"string"
						]
					},
					"fullPickupText": {
						"type": [
							"string"
						]
					},
					"hasDiscount": {
						"type": [
							"boolean"
						]
					},
					"hasExtendedPickup": {
						"type": [
							"boolean"
						]
					},
					"hasPickupToday": {
						"type": [
							"boolean"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"is24hour": {
						"type": [
							"boolean"
						]
					},
					"isFavorite": {
						"type": [
							"boolean"
						]
					},
					"isOpen": {
						"type": [
							"boolean"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"metroStation": {
						"$ref": "#/components/schemas/ApiStation"
					},
					"metroStationId": {
						"type": [
							"integer"
						]
					},
					"nearestPharmacies": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPharmacy"
							}
						],
						"type": [
							"array"
						]
					},
					"network": {
						"type": [
							"string"
						]
					},
					"openCloseText": {
						"type": [
							"string"
						]
					},
					"orderConfirmationTime": {
						"type": [
							"integer"
						]
					},
					"orderNumber": {
						"description": "deprecated",
						"type": [
							"integer"
						]
					},
					"outOfTurn": {
						"description": "deprecated",
						"type": [
							"boolean"
						]
					},
					"pharmacyNetworkId": {
						"type": [
							"integer"
						]
					},
					"phone": {
						"type": [
							"string"
						]
					},
					"phoneExtended": {
						"type": [
							"string"
						]
					},
					"pickupText": {
						"type": [
							"string"
						]
					},
					"timezone": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"workingHours": {
						"description": "deprecated",
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"workingHoursText": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPharmacyClusterMarker": {
				"required": [
					"id",
					"count",
					"latitude",
					"longitude",
					"distance",
					"imageUrl"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"distance": {
						"type": [
							"integer"
						]
					},
					"id": {
						"type": [
							"string"
						]
					},
					"imageUrl": {
						"type": [
							"string"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					}
				}
			},
			"ApiPharmacyClusterResponse": {
				"required": [
					"pharmacyList",
					"view",
					"count",
					"map"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"map": {
						"$ref": "#/components/schemas/ApiPharmacyClusterResponseMap"
					},
					"pharmacyList": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPharmacy"
							}
						],
						"type": [
							"array"
						]
					},
					"view": {
						"$ref": "#/components/schemas/ApiMapView"
					}
				}
			},
			"ApiPharmacyClusterResponseMap": {
				"required": [
					"pharmacyMarkers",
					"clusterMarkers"
				],
				"properties": {
					"clusterMarkers": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPharmacyClusterMarker"
							}
						],
						"type": [
							"array"
						]
					},
					"pharmacyMarkers": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPharmacyMarker"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiPharmacyCount": {
				"required": [
					"priceMin",
					"priceMax",
					"pharmacyMinPrice",
					"deliveryAtText",
					"active",
					"isDeliveryAvailable",
					"isDeliveryCourierAvailable",
					"count"
				],
				"properties": {
					"active": {
						"type": [
							"boolean"
						]
					},
					"count": {
						"type": [
							"integer"
						]
					},
					"deliveryAtText": {
						"type": [
							"string"
						]
					},
					"isDeliveryAvailable": {
						"type": [
							"boolean"
						]
					},
					"isDeliveryCourierAvailable": {
						"description": "deprecated",
						"type": [
							"boolean"
						]
					},
					"pharmacyMinPrice": {
						"type": [
							"integer"
						]
					},
					"priceMax": {
						"type": [
							"integer"
						]
					},
					"priceMin": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiPharmacyMarker": {
				"required": [
					"longitude",
					"distance",
					"pharmacy",
					"id",
					"latitude"
				],
				"properties": {
					"distance": {
						"type": [
							"integer"
						]
					},
					"id": {
						"type": [
							"string"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"pharmacy": {
						"$ref": "#/components/schemas/ApiPharmacy"
					}
				}
			},
			"ApiPharmacyNetwork": {
				"required": [
					"externalId",
					"outOfTurn",
					"orderConfirmationTime",
					"id",
					"title",
					"image",
					"imageHash",
					"phones"
				],
				"properties": {
					"externalId": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"imageHash": {
						"type": [
							"string"
						]
					},
					"orderConfirmationTime": {
						"type": [
							"integer"
						]
					},
					"outOfTurn": {
						"type": [
							"boolean"
						]
					},
					"phones": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPharmacySearch": {
				"required": [
					"pickupOnly",
					"discountPriceOnly",
					"cityId",
					"partnerIds"
				],
				"properties": {
					"cartId": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"discountPriceOnly": {
						"type": [
							"boolean"
						]
					},
					"partnerIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"pickupOnly": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiPharmacyStatistics": {
				"required": [
					"count",
					"hasPickup",
					"hasDiscountPrice"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"hasDiscountPrice": {
						"type": [
							"boolean"
						]
					},
					"hasPickup": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiPicture": {
				"required": [
					"bigUrl",
					"mediumUrl",
					"smallUrl"
				],
				"properties": {
					"bigUrl": {
						"type": [
							"string"
						]
					},
					"mediumUrl": {
						"type": [
							"string"
						]
					},
					"smallUrl": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPopularQuery": {
				"required": [
					"title",
					"url",
					"productSearch",
					"productIds"
				],
				"properties": {
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"productSearch": {
						"$ref": "#/components/schemas/ApiProductSearch"
					},
					"singleProductId": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPrescription": {
				"required": [
					"items",
					"prescriptionId",
					"createdAt",
					"dateEnd",
					"organization",
					"address",
					"titles"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"createdAt": {
						"type": [
							"string"
						]
					},
					"dateEnd": {
						"type": [
							"string"
						]
					},
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPrescriptionItem"
							}
						],
						"type": [
							"array"
						]
					},
					"organization": {
						"type": [
							"string"
						]
					},
					"prescriptionId": {
						"type": [
							"integer"
						]
					},
					"titles": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiPrescriptionItem": {
				"required": [
					"title",
					"products"
				],
				"properties": {
					"products": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPrescriptionProduct"
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiPrescriptionProduct": {
				"required": [
					"product",
					"count"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"product": {
						"$ref": "#/components/schemas/ApiProductSummary"
					}
				}
			},
			"ApiPrescriptionSummary": {
				"required": [
					"createdAt",
					"dateEnd",
					"organization",
					"address",
					"titles",
					"prescriptionId"
				],
				"properties": {
					"address": {
						"type": [
							"string"
						]
					},
					"createdAt": {
						"type": [
							"string"
						]
					},
					"dateEnd": {
						"type": [
							"string"
						]
					},
					"organization": {
						"type": [
							"string"
						]
					},
					"prescriptionId": {
						"type": [
							"integer"
						]
					},
					"titles": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiProduct": {
				"required": [
					"quantity",
					"isAds",
					"minPrice",
					"pickup",
					"weight",
					"propTitle",
					"imageInfos",
					"propertyValueListings",
					"hasInstruction",
					"seoBlockTitleShort",
					"tradeProductsCount",
					"pharmacyPickupCount",
					"certificatesPictures",
					"isFavorite",
					"seoBlockTitle",
					"avgPrice",
					"imageHashes",
					"reviewCount",
					"seoLinks",
					"values",
					"images",
					"delivery",
					"weightApps",
					"certificates",
					"subtitle",
					"fullTitle",
					"amountText",
					"alias",
					"pharmacyCount",
					"hasRecipe",
					"releaseForms",
					"quantityDelivery",
					"diseases",
					"reviewSummary",
					"title",
					"maxPrice",
					"analogsCount",
					"fullProducer",
					"categoryProperties",
					"productId",
					"isAvailable",
					"amount"
				],
				"properties": {
					"GRLSUrl": {
						"type": [
							"string"
						]
					},
					"activeSubstance": {
						"type": [
							"string"
						]
					},
					"activeSubstanceProperty": {
						"$ref": "#/components/schemas/ApiPropertyValue"
					},
					"alias": {
						"type": [
							"string"
						]
					},
					"amount": {
						"type": [
							"integer"
						]
					},
					"amountText": {
						"type": [
							"string"
						]
					},
					"analogBanner": {
						"$ref": "#/components/schemas/ApiProductSummary"
					},
					"analogsCount": {
						"description": "deprecated",
						"type": [
							"integer"
						]
					},
					"avgPrice": {
						"type": [
							"integer"
						]
					},
					"campaign": {
						"type": [
							"string"
						]
					},
					"cashbackType": {
						"$ref": "#/components/schemas/ApiCashbackType"
					},
					"category": {
						"$ref": "#/components/schemas/ApiCategory"
					},
					"categoryProperties": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProperty"
							}
						],
						"type": [
							"array"
						]
					},
					"certificates": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"certificatesPictures": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPicture"
							}
						],
						"type": [
							"array"
						]
					},
					"country": {
						"type": [
							"string"
						]
					},
					"delivery": {
						"type": [
							"boolean"
						]
					},
					"dfc": {
						"type": [
							"string"
						]
					},
					"diseases": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"dosage": {
						"type": [
							"string"
						]
					},
					"dosageFormSize": {
						"type": [
							"string"
						]
					},
					"dose": {
						"type": [
							"string"
						]
					},
					"fullProducer": {
						"type": [
							"string"
						]
					},
					"fullTitle": {
						"type": [
							"string"
						]
					},
					"hasInstruction": {
						"type": [
							"boolean"
						]
					},
					"hasRecipe": {
						"type": [
							"boolean"
						]
					},
					"imageHashes": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"imageInfos": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiImageInfo"
							}
						],
						"type": [
							"array"
						]
					},
					"images": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"instruction": {
						"$ref": "#/components/schemas/ApiInstruction"
					},
					"isAds": {
						"type": [
							"boolean"
						]
					},
					"isAvailable": {
						"type": [
							"boolean"
						]
					},
					"isFavorite": {
						"type": [
							"boolean"
						]
					},
					"label": {
						"type": [
							"string"
						]
					},
					"lastDate": {
						"type": [
							"string"
						]
					},
					"lastPrice": {
						"type": [
							"integer"
						]
					},
					"mainDisease": {
						"type": [
							"string"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"pack1n": {
						"type": [
							"string"
						]
					},
					"packDosage": {
						"type": [
							"string"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"pharmacyPickupCount": {
						"type": [
							"integer"
						]
					},
					"pickup": {
						"type": [
							"boolean"
						]
					},
					"producer": {
						"type": [
							"string"
						]
					},
					"producerProperty": {
						"$ref": "#/components/schemas/ApiPropertyValue"
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"propTitle": {
						"type": [
							"string"
						]
					},
					"propertyValueListings": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"quantity": {
						"type": [
							"integer"
						]
					},
					"quantityDelivery": {
						"type": [
							"integer"
						]
					},
					"releaseForms": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiReleaseForm"
							}
						],
						"type": [
							"array"
						]
					},
					"reviewCount": {
						"type": [
							"integer"
						]
					},
					"reviewRating": {
						"type": [
							"number"
						]
					},
					"reviewSummary": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductReview"
							}
						],
						"type": [
							"array"
						]
					},
					"seoBlockTitle": {
						"type": [
							"string"
						]
					},
					"seoBlockTitleShort": {
						"type": [
							"string"
						]
					},
					"seoLinks": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiSeoLink"
							}
						],
						"type": [
							"array"
						]
					},
					"strictAnalogsCount": {
						"type": [
							"integer"
						]
					},
					"strictAnalogsMinPrice": {
						"type": [
							"integer"
						]
					},
					"subtitle": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"trade": {
						"$ref": "#/components/schemas/ApiPropertyValue"
					},
					"tradeProductsCount": {
						"type": [
							"integer"
						]
					},
					"values": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiValue"
							}
						],
						"type": [
							"array"
						]
					},
					"weight": {
						"type": [
							"integer"
						]
					},
					"weightApps": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductAutocompleteInfo": {
				"required": [
					"categories",
					"producers",
					"products",
					"suggests",
					"trades"
				],
				"properties": {
					"categories": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiAutocompleteCategory"
							}
						],
						"type": [
							"array"
						]
					},
					"producers": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPropertyValue"
							}
						],
						"type": [
							"array"
						]
					},
					"products": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductSummary"
							}
						],
						"type": [
							"array"
						]
					},
					"promoProduct": {
						"$ref": "#/components/schemas/ApiProductSummary"
					},
					"suggests": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiAutocompleteSuggest"
							}
						],
						"type": [
							"array"
						]
					},
					"trades": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPropertyValue"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiProductBanner": {
				"required": [
					"bannerType",
					"title",
					"url"
				],
				"properties": {
					"bannerType": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiProductFilters": {
				"required": [
					"mainProperties",
					"properties",
					"categories"
				],
				"properties": {
					"categories": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCategory"
							}
						],
						"type": [
							"array"
						]
					},
					"count": {
						"type": [
							"integer"
						]
					},
					"countDelivery": {
						"type": [
							"integer"
						]
					},
					"mainProperties": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPropertyValue"
							}
						],
						"type": [
							"array"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"properties": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProperty"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiProductOfTheDay": {
				"required": [
					"categoryId",
					"product"
				],
				"properties": {
					"categoryId": {
						"type": [
							"integer"
						]
					},
					"product": {
						"$ref": "#/components/schemas/ApiProductSummary"
					}
				}
			},
			"ApiProductOrder": {
				"required": [
					"isLowQuantity",
					"imageHashes",
					"reviewCount",
					"pharmacyPickupCount",
					"fullTitle",
					"amount",
					"images",
					"pickup",
					"isAds",
					"price",
					"quantity",
					"imageInfos",
					"delivery",
					"pharmacyCount",
					"subtitle",
					"maxPrice",
					"amountText",
					"weight",
					"expirationDate",
					"propTitle",
					"isAvailable",
					"weightApps",
					"productId",
					"title",
					"avgPrice",
					"hasRecipe",
					"diseases",
					"count",
					"fullProducer",
					"alias",
					"minPrice",
					"hasInstruction"
				],
				"properties": {
					"GRLSUrl": {
						"type": [
							"string"
						]
					},
					"activeSubstance": {
						"type": [
							"string"
						]
					},
					"alias": {
						"type": [
							"string"
						]
					},
					"amount": {
						"type": [
							"integer"
						]
					},
					"amountText": {
						"type": [
							"string"
						]
					},
					"avgPrice": {
						"type": [
							"integer"
						]
					},
					"campaign": {
						"type": [
							"string"
						]
					},
					"cashbackType": {
						"$ref": "#/components/schemas/ApiCashbackType"
					},
					"category": {
						"$ref": "#/components/schemas/ApiCategory"
					},
					"count": {
						"type": [
							"integer"
						]
					},
					"country": {
						"type": [
							"string"
						]
					},
					"delivery": {
						"type": [
							"boolean"
						]
					},
					"dfc": {
						"type": [
							"string"
						]
					},
					"diseases": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"dosage": {
						"type": [
							"string"
						]
					},
					"dosageFormSize": {
						"type": [
							"string"
						]
					},
					"dose": {
						"type": [
							"string"
						]
					},
					"expirationDate": {
						"type": [
							"string"
						]
					},
					"fullProducer": {
						"type": [
							"string"
						]
					},
					"fullTitle": {
						"type": [
							"string"
						]
					},
					"hasInstruction": {
						"type": [
							"boolean"
						]
					},
					"hasRecipe": {
						"type": [
							"boolean"
						]
					},
					"imageHashes": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"imageInfos": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiImageInfo"
							}
						],
						"type": [
							"array"
						]
					},
					"images": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"isAds": {
						"type": [
							"boolean"
						]
					},
					"isAvailable": {
						"type": [
							"boolean"
						]
					},
					"isLowQuantity": {
						"type": [
							"boolean"
						]
					},
					"label": {
						"type": [
							"string"
						]
					},
					"lastDate": {
						"type": [
							"string"
						]
					},
					"lastPrice": {
						"type": [
							"integer"
						]
					},
					"mainDisease": {
						"type": [
							"string"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"pack1n": {
						"type": [
							"string"
						]
					},
					"packDosage": {
						"type": [
							"string"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"pharmacyPickupCount": {
						"type": [
							"integer"
						]
					},
					"pickup": {
						"type": [
							"boolean"
						]
					},
					"price": {
						"type": [
							"integer"
						]
					},
					"producer": {
						"type": [
							"string"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"propTitle": {
						"type": [
							"string"
						]
					},
					"quantity": {
						"type": [
							"integer"
						]
					},
					"reviewCount": {
						"type": [
							"integer"
						]
					},
					"reviewRating": {
						"type": [
							"number"
						]
					},
					"subtitle": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"trade": {
						"$ref": "#/components/schemas/ApiPropertyValue"
					},
					"weight": {
						"type": [
							"integer"
						]
					},
					"weightApps": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductPartnerPrice": {
				"required": [
					"minPrice",
					"hasOtherPrices",
					"pharmacyCount",
					"partnerId",
					"partner"
				],
				"properties": {
					"hasOtherPrices": {
						"type": [
							"boolean"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"partner": {
						"$ref": "#/components/schemas/ApiPartnerSummary"
					},
					"partnerId": {
						"type": [
							"integer"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductPrice": {
				"required": [
					"maxPrice",
					"pharmacyCount",
					"pickup",
					"delivery",
					"isAvailable",
					"productId",
					"minPrice"
				],
				"properties": {
					"delivery": {
						"type": [
							"boolean"
						]
					},
					"isAvailable": {
						"type": [
							"boolean"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"pickup": {
						"type": [
							"boolean"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductPriceHistory": {
				"required": [
					"label",
					"minPrice",
					"maxPrice",
					"avgPrice"
				],
				"properties": {
					"avgPrice": {
						"type": [
							"integer"
						]
					},
					"label": {
						"type": [
							"string"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductReminder": {
				"required": [
					"productReminderId",
					"frequency",
					"schedule",
					"scheduleProgress",
					"startAt",
					"scheduleUsage",
					"medicationRule"
				],
				"properties": {
					"duration": {
						"type": [
							"integer"
						]
					},
					"frequency": {
						"type": [
							"integer"
						]
					},
					"medicationRule": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"notificationSettings": {
						"$ref": "#/components/schemas/ApiReminderNotification"
					},
					"product": {
						"$ref": "#/components/schemas/ApiProductSummary"
					},
					"productReminderId": {
						"type": [
							"integer"
						]
					},
					"schedule": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiReminderScheduleItem"
							}
						],
						"type": [
							"array"
						]
					},
					"scheduleProgress": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiReminderScheduleProgressItem"
							}
						],
						"type": [
							"array"
						]
					},
					"scheduleUsage": {
						"type": [
							"integer"
						]
					},
					"startAt": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiProductReminderSummary": {
				"required": [
					"productReminderId",
					"startAt",
					"schedule",
					"scheduleUsage",
					"frequency",
					"medicationRule"
				],
				"properties": {
					"duration": {
						"type": [
							"integer"
						]
					},
					"frequency": {
						"type": [
							"integer"
						]
					},
					"medicationRule": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"notificationSettings": {
						"$ref": "#/components/schemas/ApiReminderNotification"
					},
					"product": {
						"$ref": "#/components/schemas/ApiProductSummary"
					},
					"productReminderId": {
						"type": [
							"integer"
						]
					},
					"schedule": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiReminderScheduleItem"
							}
						],
						"type": [
							"array"
						]
					},
					"scheduleUsage": {
						"type": [
							"integer"
						]
					},
					"startAt": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiProductReview": {
				"required": [
					"name",
					"content",
					"isMyPlus",
					"rating",
					"disadvantages",
					"createdAt",
					"isVerified",
					"reviewId",
					"advantages",
					"plusVotes",
					"minusVotes",
					"comments",
					"imageHashes",
					"isMyMinus"
				],
				"properties": {
					"advantages": {
						"type": [
							"string"
						]
					},
					"comments": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductReviewComment"
							}
						],
						"type": [
							"array"
						]
					},
					"content": {
						"type": [
							"string"
						]
					},
					"createdAt": {
						"type": [
							"string"
						]
					},
					"disadvantages": {
						"type": [
							"string"
						]
					},
					"imageHashes": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"isMyMinus": {
						"type": [
							"boolean"
						]
					},
					"isMyPlus": {
						"type": [
							"boolean"
						]
					},
					"isVerified": {
						"type": [
							"boolean"
						]
					},
					"minusVotes": {
						"type": [
							"integer"
						]
					},
					"name": {
						"type": [
							"string"
						]
					},
					"plusVotes": {
						"type": [
							"integer"
						]
					},
					"product": {
						"$ref": "#/components/schemas/ApiProductSummary"
					},
					"rating": {
						"type": [
							"integer"
						]
					},
					"reviewId": {
						"type": [
							"integer"
						]
					},
					"siteUserId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductReviewComment": {
				"required": [
					"reviewId",
					"content",
					"isMyMinus",
					"plusVotes",
					"isProducer",
					"commentId",
					"siteUserId",
					"name",
					"avatarHash",
					"isMyPlus",
					"minusVotes",
					"createdAt"
				],
				"properties": {
					"avatarHash": {
						"type": [
							"string"
						]
					},
					"commentId": {
						"type": [
							"integer"
						]
					},
					"content": {
						"type": [
							"string"
						]
					},
					"createdAt": {
						"type": [
							"string"
						]
					},
					"isMyMinus": {
						"type": [
							"boolean"
						]
					},
					"isMyPlus": {
						"type": [
							"boolean"
						]
					},
					"isProducer": {
						"type": [
							"boolean"
						]
					},
					"minusVotes": {
						"type": [
							"integer"
						]
					},
					"name": {
						"type": [
							"string"
						]
					},
					"plusVotes": {
						"type": [
							"integer"
						]
					},
					"reviewId": {
						"type": [
							"integer"
						]
					},
					"siteUserId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductReviewCommentRating": {
				"required": [
					"isMyPlus",
					"isMyMinus",
					"plusVotes",
					"minusVotes"
				],
				"properties": {
					"isMyMinus": {
						"type": [
							"boolean"
						]
					},
					"isMyPlus": {
						"type": [
							"boolean"
						]
					},
					"minusVotes": {
						"type": [
							"integer"
						]
					},
					"plusVotes": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductReviewRating": {
				"required": [
					"isMyPlus",
					"isMyMinus",
					"plusVotes",
					"minusVotes"
				],
				"properties": {
					"isMyMinus": {
						"type": [
							"boolean"
						]
					},
					"isMyPlus": {
						"type": [
							"boolean"
						]
					},
					"minusVotes": {
						"type": [
							"integer"
						]
					},
					"plusVotes": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductReviewReleaseForm": {
				"required": [
					"releaseFormId",
					"title",
					"reviewCount",
					"rating"
				],
				"properties": {
					"rating": {
						"type": [
							"number"
						]
					},
					"releaseFormId": {
						"type": [
							"integer"
						]
					},
					"reviewCount": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiProductReviewStatistics": {
				"required": [
					"totalCount",
					"releaseForms"
				],
				"properties": {
					"releaseForms": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiProductReviewReleaseForm"
							}
						],
						"type": [
							"array"
						]
					},
					"totalCount": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProductSearch": {
				"required": [],
				"properties": {
					"analogProductId": {
						"type": [
							"integer"
						]
					},
					"cartId": {
						"type": [
							"string"
						]
					},
					"categoryId": {
						"type": [
							"integer"
						]
					},
					"categoryIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"excludeProductId": {
						"type": [
							"integer"
						]
					},
					"excludePropertyValueIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"filterCategoryIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"filterPropertyValueIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"isPopular": {
						"type": [
							"boolean"
						]
					},
					"mainPropertyIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"mergedPropertyIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"pharmacyIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"priceMax": {
						"type": [
							"integer"
						]
					},
					"priceMin": {
						"type": [
							"integer"
						]
					},
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"propertyValueIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"query": {
						"type": [
							"string"
						]
					},
					"showDisabled": {
						"type": [
							"boolean"
						]
					},
					"sorting": {
						"type": [
							"string"
						]
					},
					"sortingIsAsc": {
						"type": [
							"boolean"
						]
					},
					"tradeId": {
						"type": [
							"integer"
						]
					},
					"tradeIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"withChildCategories": {
						"type": [
							"boolean"
						]
					},
					"withDelivery": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiProductSummary": {
				"required": [
					"weight",
					"fullTitle",
					"maxPrice",
					"images",
					"delivery",
					"isAds",
					"hasRecipe",
					"diseases",
					"pharmacyPickupCount",
					"pickup",
					"alias",
					"minPrice",
					"isAvailable",
					"productId",
					"avgPrice",
					"amountText",
					"pharmacyCount",
					"weightApps",
					"title",
					"amount",
					"imageHashes",
					"imageInfos",
					"subtitle",
					"propTitle",
					"fullProducer",
					"hasInstruction",
					"reviewCount",
					"quantity"
				],
				"properties": {
					"GRLSUrl": {
						"type": [
							"string"
						]
					},
					"activeSubstance": {
						"type": [
							"string"
						]
					},
					"alias": {
						"type": [
							"string"
						]
					},
					"amount": {
						"type": [
							"integer"
						]
					},
					"amountText": {
						"type": [
							"string"
						]
					},
					"avgPrice": {
						"type": [
							"integer"
						]
					},
					"campaign": {
						"type": [
							"string"
						]
					},
					"cashbackType": {
						"$ref": "#/components/schemas/ApiCashbackType"
					},
					"category": {
						"$ref": "#/components/schemas/ApiCategory"
					},
					"country": {
						"type": [
							"string"
						]
					},
					"delivery": {
						"type": [
							"boolean"
						]
					},
					"dfc": {
						"type": [
							"string"
						]
					},
					"diseases": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"dosage": {
						"type": [
							"string"
						]
					},
					"dosageFormSize": {
						"type": [
							"string"
						]
					},
					"dose": {
						"type": [
							"string"
						]
					},
					"fullProducer": {
						"type": [
							"string"
						]
					},
					"fullTitle": {
						"type": [
							"string"
						]
					},
					"hasInstruction": {
						"type": [
							"boolean"
						]
					},
					"hasRecipe": {
						"type": [
							"boolean"
						]
					},
					"imageHashes": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"imageInfos": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiImageInfo"
							}
						],
						"type": [
							"array"
						]
					},
					"images": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"isAds": {
						"type": [
							"boolean"
						]
					},
					"isAvailable": {
						"type": [
							"boolean"
						]
					},
					"label": {
						"type": [
							"string"
						]
					},
					"lastDate": {
						"type": [
							"string"
						]
					},
					"lastPrice": {
						"type": [
							"integer"
						]
					},
					"mainDisease": {
						"type": [
							"string"
						]
					},
					"maxPrice": {
						"type": [
							"integer"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"pack1n": {
						"type": [
							"string"
						]
					},
					"packDosage": {
						"type": [
							"string"
						]
					},
					"pharmacyCount": {
						"type": [
							"integer"
						]
					},
					"pharmacyPickupCount": {
						"type": [
							"integer"
						]
					},
					"pickup": {
						"type": [
							"boolean"
						]
					},
					"producer": {
						"type": [
							"string"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"propTitle": {
						"type": [
							"string"
						]
					},
					"quantity": {
						"type": [
							"integer"
						]
					},
					"reviewCount": {
						"type": [
							"integer"
						]
					},
					"reviewRating": {
						"type": [
							"number"
						]
					},
					"subtitle": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"trade": {
						"$ref": "#/components/schemas/ApiPropertyValue"
					},
					"weight": {
						"type": [
							"integer"
						]
					},
					"weightApps": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiProfile": {
				"required": [
					"withBayerPersonalData",
					"id",
					"phone",
					"email",
					"addressHome",
					"isPushNotificationEnabled",
					"isEmailNotificationEnabled",
					"isMarketingNotificationEnabled",
					"name",
					"cityId",
					"addressWork",
					"withOTCPersonalData"
				],
				"properties": {
					"addressHome": {
						"type": [
							"string"
						]
					},
					"addressWork": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"email": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"isEmailNotificationEnabled": {
						"type": [
							"boolean"
						]
					},
					"isMarketingNotificationEnabled": {
						"type": [
							"boolean"
						]
					},
					"isPushNotificationEnabled": {
						"type": [
							"boolean"
						]
					},
					"name": {
						"type": [
							"string"
						]
					},
					"phone": {
						"type": [
							"string"
						]
					},
					"withBayerPersonalData": {
						"type": [
							"boolean"
						]
					},
					"withOTCPersonalData": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiProfileFavoriteProductSearch": {
				"required": [],
				"properties": {
					"cartId": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"sorting": {
						"type": [
							"string"
						]
					},
					"sortingIsAsc": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiProfileOrderProductSearch": {
				"required": [],
				"properties": {
					"cartId": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"sorting": {
						"type": [
							"string"
						]
					},
					"sortingIsAsc": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiProfileRegister": {
				"required": [],
				"properties": {
					"isMarketingNotificationEnabled": {
						"type": [
							"boolean"
						]
					},
					"withBayerPersonalData": {
						"type": [
							"boolean"
						]
					},
					"withOTCPersonalData": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiProfileUpdate": {
				"required": [],
				"properties": {
					"addressHome": {
						"type": [
							"string"
						]
					},
					"addressWork": {
						"type": [
							"string"
						]
					},
					"androidFcmToken": {
						"type": [
							"string"
						]
					},
					"birthDate": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"email": {
						"type": [
							"string"
						]
					},
					"gaid": {
						"type": [
							"string"
						]
					},
					"gender": {
						"type": [
							"string"
						]
					},
					"iOSfcmToken": {
						"type": [
							"string"
						]
					},
					"idfa": {
						"type": [
							"string"
						]
					},
					"isEmailNotificationEnabled": {
						"type": [
							"boolean"
						]
					},
					"isMarketingNotificationEnabled": {
						"type": [
							"boolean"
						]
					},
					"isPushNotificationEnabled": {
						"type": [
							"boolean"
						]
					},
					"name": {
						"type": [
							"string"
						]
					},
					"withBayerPersonalData": {
						"type": [
							"boolean"
						]
					},
					"withOTCPersonalData": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiPromoItem": {
				"required": [
					"productIds",
					"title",
					"url",
					"image",
					"productId"
				],
				"properties": {
					"campaign": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"productIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"tradeId": {
						"type": [
							"integer"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiProperty": {
				"required": [
					"propertyId",
					"title",
					"description",
					"alias",
					"values"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"description": {
						"type": [
							"string"
						]
					},
					"propertyId": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"values": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPropertyValue"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiPropertyValue": {
				"required": [
					"title",
					"alias",
					"hasInstruction",
					"propertyValueId",
					"propertyId"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"hasInstruction": {
						"type": [
							"boolean"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"imageInfo": {
						"$ref": "#/components/schemas/ApiImageInfo"
					},
					"propertyId": {
						"type": [
							"integer"
						]
					},
					"propertyValueId": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiProvider": {
				"required": [
					"image",
					"phones",
					"id",
					"pharmacyNetworkId",
					"title"
				],
				"properties": {
					"id": {
						"type": [
							"integer"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"pharmacyNetworkId": {
						"type": [
							"integer"
						]
					},
					"phones": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiProviderCount": {
				"required": [
					"count",
					"priceDeliveryMin"
				],
				"properties": {
					"count": {
						"type": [
							"integer"
						]
					},
					"priceDeliveryMin": {
						"type": [
							"integer"
						]
					},
					"priceMax": {
						"type": [
							"integer"
						]
					},
					"priceMin": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiReadingLink": {
				"required": [
					"url",
					"image",
					"alt",
					"description"
				],
				"properties": {
					"alt": {
						"type": [
							"string"
						]
					},
					"description": {
						"type": [
							"string"
						]
					},
					"image": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiReleaseForm": {
				"required": [
					"alias",
					"minPrice",
					"productId",
					"title"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiReminderForm": {
				"required": [
					"startAt",
					"scheduleUsage",
					"frequency",
					"medicationRule",
					"schedule",
					"productReminderId",
					"productId"
				],
				"properties": {
					"duration": {
						"description": "Длительность курса, null - постоянно",
						"type": [
							"integer"
						]
					},
					"frequency": {
						"description": "Частота приёма лекарства в день",
						"type": [
							"integer"
						]
					},
					"medicationRule": {
						"description": "Правило приема",
						"type": [
							"string"
						]
					},
					"notificationSettings": {
						"$ref": "#/components/schemas/ApiReminderNotification"
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"productReminderId": {
						"type": [
							"integer"
						]
					},
					"schedule": {
						"description": "График времени приема лекарств",
						"items": [
							{
								"$ref": "#/components/schemas/ApiReminderScheduleItem"
							}
						],
						"type": [
							"array"
						]
					},
					"scheduleUsage": {
						"description": "Частота приёма лекарства в месяц (ежедневно, раз в 2 дня и т.п.)",
						"type": [
							"integer"
						]
					},
					"startAt": {
						"description": "Начало курса",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiReminderNotification": {
				"required": [
					"currentStocks",
					"notificationStocks"
				],
				"properties": {
					"currentStocks": {
						"description": "Текущий запас препарата",
						"type": [
							"number"
						]
					},
					"notificationStocks": {
						"description": "Запас препарата для напоминания",
						"type": [
							"number"
						]
					}
				}
			},
			"ApiReminderProgressForm": {
				"required": [
					"productReminderId",
					"progressAdd",
					"progressRemove"
				],
				"properties": {
					"productReminderId": {
						"type": [
							"integer"
						]
					},
					"progressAdd": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"progressRemove": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiReminderScheduleItem": {
				"required": [
					"count",
					"time"
				],
				"properties": {
					"count": {
						"description": "Количество единиц для приема",
						"type": [
							"number"
						]
					},
					"time": {
						"description": "Время приема",
						"type": [
							"string"
						]
					}
				}
			},
			"ApiReminderScheduleProgressItem": {
				"required": [
					"dateTime",
					"count",
					"completed"
				],
				"properties": {
					"completed": {
						"type": [
							"boolean"
						]
					},
					"count": {
						"type": [
							"number"
						]
					},
					"dateTime": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiReviewCommentComplaint": {
				"required": [
					"commentId",
					"content"
				],
				"properties": {
					"commentId": {
						"type": [
							"integer"
						]
					},
					"content": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiReviewCommentForm": {
				"required": [
					"reviewId",
					"content"
				],
				"properties": {
					"content": {
						"type": [
							"string"
						]
					},
					"reviewId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiReviewComplaint": {
				"required": [
					"reviewId",
					"content"
				],
				"properties": {
					"content": {
						"type": [
							"string"
						]
					},
					"reviewId": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiReviewForm": {
				"required": [
					"imageHashes",
					"productId",
					"rating",
					"content",
					"advantages",
					"disadvantages"
				],
				"properties": {
					"advantages": {
						"type": [
							"string"
						]
					},
					"content": {
						"type": [
							"string"
						]
					},
					"disadvantages": {
						"type": [
							"string"
						]
					},
					"imageHashes": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"productId": {
						"type": [
							"integer"
						]
					},
					"rating": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiSEOBlock": {
				"required": [
					"title",
					"type",
					"text",
					"items"
				],
				"properties": {
					"items": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiSEOBlockItem"
							}
						],
						"type": [
							"array"
						]
					},
					"text": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"type": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiSEOBlockItem": {
				"required": [
					"title",
					"text",
					"url",
					"class",
					"cityId",
					"cityAlias",
					"minPrice"
				],
				"properties": {
					"cityAlias": {
						"type": [
							"string"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"class": {
						"type": [
							"string"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"text": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiSEOInstruction": {
				"required": [
					"certificates",
					"certificatesPictures",
					"key",
					"product",
					"values",
					"instructions"
				],
				"properties": {
					"certificates": {
						"items": [
							{
								"type": [
									"string"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"certificatesPictures": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiPicture"
							}
						],
						"type": [
							"array"
						]
					},
					"instructions": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiInstructionField"
							}
						],
						"type": [
							"array"
						]
					},
					"key": {
						"type": [
							"string"
						]
					},
					"product": {
						"$ref": "#/components/schemas/ApiProductSummary"
					},
					"values": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiInstructionField"
							}
						],
						"type": [
							"array"
						]
					}
				}
			},
			"ApiSEOTradeContent": {
				"required": [
					"title",
					"content"
				],
				"properties": {
					"content": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiSeoLink": {
				"required": [
					"group",
					"url",
					"title"
				],
				"properties": {
					"group": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiSiteBusinessCounters": {
				"required": [
					"siteTraffic",
					"appsTraffic",
					"turnover",
					"pharmacies",
					"products"
				],
				"properties": {
					"appsTraffic": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"pharmacies": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"products": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"siteTraffic": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"turnover": {
						"$ref": "#/components/schemas/ApiValue"
					}
				}
			},
			"ApiSiteCounters": {
				"required": [
					"years",
					"products",
					"visitors",
					"networks",
					"regions",
					"pharmacies",
					"economy"
				],
				"properties": {
					"economy": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"networks": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"pharmacies": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"products": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"regions": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"visitors": {
						"$ref": "#/components/schemas/ApiValue"
					},
					"years": {
						"$ref": "#/components/schemas/ApiValue"
					}
				}
			},
			"ApiStation": {
				"required": [
					"title",
					"color",
					"latitude",
					"longitude",
					"stationId",
					"cityId"
				],
				"properties": {
					"cityId": {
						"type": [
							"integer"
						]
					},
					"color": {
						"type": [
							"string"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"stationId": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiStatusOrder": {
				"required": [
					"isCurrent",
					"isCollecting",
					"isCancelable",
					"isCompletableByUser",
					"isCancelledCompletableByUser",
					"isAddable",
					"reservationPercent",
					"imagePng3x",
					"workflowPercent",
					"imageSvg",
					"imagePng4x",
					"name",
					"description",
					"isCompleted",
					"colorHex",
					"isReady",
					"color",
					"imagePng1x",
					"imagePng2x",
					"isCancelled",
					"isDeletableByUser",
					"statusId",
					"userStatusId"
				],
				"properties": {
					"addableTill": {
						"type": [
							"string"
						]
					},
					"color": {
						"type": [
							"string"
						]
					},
					"colorHex": {
						"type": [
							"string"
						]
					},
					"description": {
						"type": [
							"string"
						]
					},
					"imagePng1x": {
						"type": [
							"string"
						]
					},
					"imagePng2x": {
						"type": [
							"string"
						]
					},
					"imagePng3x": {
						"type": [
							"string"
						]
					},
					"imagePng4x": {
						"type": [
							"string"
						]
					},
					"imageSvg": {
						"type": [
							"string"
						]
					},
					"isAddable": {
						"type": [
							"boolean"
						]
					},
					"isCancelable": {
						"type": [
							"boolean"
						]
					},
					"isCancelled": {
						"type": [
							"boolean"
						]
					},
					"isCancelledCompletableByUser": {
						"type": [
							"boolean"
						]
					},
					"isCollecting": {
						"type": [
							"boolean"
						]
					},
					"isCompletableByUser": {
						"type": [
							"boolean"
						]
					},
					"isCompleted": {
						"type": [
							"boolean"
						]
					},
					"isCurrent": {
						"type": [
							"boolean"
						]
					},
					"isDeletableByUser": {
						"type": [
							"boolean"
						]
					},
					"isReady": {
						"type": [
							"boolean"
						]
					},
					"name": {
						"type": [
							"string"
						]
					},
					"reservationPercent": {
						"type": [
							"integer"
						]
					},
					"statusId": {
						"type": [
							"integer"
						]
					},
					"userStatusId": {
						"type": [
							"integer"
						]
					},
					"workflowPercent": {
						"type": [
							"integer"
						]
					}
				}
			},
			"ApiSubCategory": {
				"required": [
					"mergedPropertyIds",
					"id",
					"title",
					"alias",
					"categoryId"
				],
				"properties": {
					"alias": {
						"type": [
							"string"
						]
					},
					"categoryId": {
						"type": [
							"integer"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"mergedPropertyIds": {
						"items": [
							{
								"type": [
									"integer"
								]
							}
						],
						"type": [
							"array"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiSuggestAddress": {
				"required": [
					"rectangle",
					"title",
					"subtitle",
					"fullTitle",
					"type",
					"latitude",
					"longitude"
				],
				"properties": {
					"fullTitle": {
						"type": [
							"string"
						]
					},
					"latitude": {
						"type": [
							"number"
						]
					},
					"longitude": {
						"type": [
							"number"
						]
					},
					"rectangle": {
						"type": [
							"string"
						]
					},
					"subtitle": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"type": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiSuggestAddressDelivery": {
				"required": [
					"title",
					"subtitle",
					"fullTitle",
					"type",
					"street",
					"number",
					"isDeliveryAvailable"
				],
				"properties": {
					"fullTitle": {
						"type": [
							"string"
						]
					},
					"isDeliveryAvailable": {
						"type": [
							"boolean"
						]
					},
					"number": {
						"type": [
							"string"
						]
					},
					"street": {
						"type": [
							"string"
						]
					},
					"subtitle": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"type": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiTradeLink": {
				"required": [
					"url",
					"image",
					"minPrice",
					"productsCount",
					"title"
				],
				"properties": {
					"image": {
						"type": [
							"string"
						]
					},
					"minPrice": {
						"type": [
							"integer"
						]
					},
					"productsCount": {
						"type": [
							"integer"
						]
					},
					"title": {
						"type": [
							"string"
						]
					},
					"url": {
						"type": [
							"string"
						]
					}
				}
			},
			"ApiUserCartResponse": {
				"required": [
					"result",
					"cartPickUp",
					"missingProducts",
					"cartId",
					"isDeliveryPossible",
					"isDeliveryCourierAvailable",
					"lastCartUpdate",
					"cityId",
					"isDeliveryAvailable",
					"cart",
					"cartDelivery",
					"hasCompletePickUp"
				],
				"properties": {
					"cart": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartProduct"
							}
						],
						"type": [
							"array"
						]
					},
					"cartContext": {
						"$ref": "#/components/schemas/ApiCartContextResponse"
					},
					"cartDelivery": {
						"description": "deprecated",
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartProduct"
							}
						],
						"type": [
							"array"
						]
					},
					"cartId": {
						"type": [
							"string"
						]
					},
					"cartPickUp": {
						"description": "deprecated",
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartProduct"
							}
						],
						"type": [
							"array"
						]
					},
					"cityId": {
						"type": [
							"integer"
						]
					},
					"hasCompletePickUp": {
						"type": [
							"boolean"
						]
					},
					"isDeliveryAvailable": {
						"type": [
							"boolean"
						]
					},
					"isDeliveryCourierAvailable": {
						"description": "deprecated",
						"type": [
							"boolean"
						]
					},
					"isDeliveryPossible": {
						"type": [
							"boolean"
						]
					},
					"lastCartUpdate": {
						"type": [
							"integer"
						]
					},
					"missingProducts": {
						"items": [
							{
								"$ref": "#/components/schemas/ApiCartProduct"
							}
						],
						"type": [
							"array"
						]
					},
					"pharmacyCountDelivery": {
						"$ref": "#/components/schemas/ApiPharmacyCount"
					},
					"pharmacyCountPickUp": {
						"$ref": "#/components/schemas/ApiPharmacyCount"
					},
					"result": {
						"type": [
							"boolean"
						]
					}
				}
			},
			"ApiValue": {
				"required": [
					"title",
					"value"
				],
				"properties": {
					"title": {
						"type": [
							"string"
						]
					},
					"value": {
						"type": [
							"string"
						]
					}
				}
			},
			"DiscountSaveCardResponse": {
				"required": [
					"codeType",
					"id",
					"title",
					"code"
				],
				"properties": {
					"code": {
						"type": [
							"string"
						]
					},
					"codeType": {
						"type": [
							"string"
						]
					},
					"id": {
						"type": [
							"integer"
						]
					},
					"partner": {
						"$ref": "#/components/schemas/ApiPartnerSummary"
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"FieldError": {
				"required": [
					"error",
					"field"
				],
				"properties": {
					"constraint": {
						"$ref": "#/components/schemas/FieldErrorConstraint",
						"description": "Help with generating an error message."
					},
					"error": {
						"type": [
							"string"
						]
					},
					"field": {
						"type": [
							"string"
						]
					}
				}
			},
			"FieldErrorConstraint": {
				"required": [
					"min",
					"max"
				],
				"properties": {
					"max": {
						"description": "Max value for field.",
						"type": [
							"number"
						]
					},
					"min": {
						"description": "Min value for field.",
						"type": [
							"number"
						]
					}
				}
			},
			"ProfileReferralResponse": {
				"required": [
					"promocode",
					"title",
					"shareText",
					"rules"
				],
				"properties": {
					"promocode": {
						"type": [
							"string"
						]
					},
					"rules": {
						"type": [
							"string"
						]
					},
					"shareText": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			},
			"PromoPromocodeBannerResponse": {
				"required": [
					"title",
					"shortTitle",
					"rules",
					"promocode"
				],
				"properties": {
					"promocode": {
						"type": [
							"string"
						]
					},
					"rules": {
						"type": [
							"string"
						]
					},
					"shortTitle": {
						"type": [
							"string"
						]
					},
					"title": {
						"type": [
							"string"
						]
					}
				}
			}
		},
		"contentDescriptors": {
			"BooleanResponse": {
				"name": "BooleanResponse",
				"summary": "boolean response",
				"schema": {
					"type": [
						"boolean"
					]
				}
			},
			"IntegerArrayResponse": {
				"name": "IntegerArrayResponse",
				"summary": "integer array response",
				"schema": {
					"items": [
						{
							"type": [
								"integer"
							]
						}
					]
				}
			},
			"IntegerResponse": {
				"name": "IntegerResponse",
				"summary": "integer response",
				"schema": {
					"type": [
						"integer"
					]
				}
			},
			"NullResponse": {
				"name": "NullResponse",
				"summary": "null response",
				"schema": {
					"type": [
						"null"
					]
				}
			},
			"StringArrayResponse": {
				"name": "StringArrayResponse",
				"summary": "string array response",
				"schema": {
					"items": [
						{
							"type": [
								"string"
							]
						}
					]
				}
			},
			"StringResponse": {
				"name": "StringResponse",
				"summary": "string response",
				"schema": {
					"type": [
						"string"
					]
				}
			}
		}
	}
}